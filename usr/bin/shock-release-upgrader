#!/bin/bash

current_version="$(echo "$(apt-show-versions shock-os-metapackage)" | cut -d" " -f2-2)"

current_version_nodecimal="$(echo "$(apt-show-versions shock-os-metapackage)" | cut -d" " -f2-2)"

if [[ "$current_version" == *"."* ]]
then

    current_version_nodecimal=$(sed 's/[.].*//' <<< "$current_version")

fi

rm /shock/codenames

wget https://raw.githubusercontent.com/Shock-OS/Upgrade-Packages/main/codenames -P /shock

latest_version="$(echo "$(wc -l /shock/codenames)" | cut -f1 -d" ")"

if ((latest_version>current_version_nodecimal))
then

    upgrto_version="$current_version_nodecimal"

    let upgrto_version++

    upgrto_codename="$(sed -n "$upgrto_version"p /shock/codenames)"

    if ((upgrto_version<10))
    then

        upgrto_version="$upgrto_version.0"

    fi

    yad --notification --image=/shock/shock-release-upgrader.svg --icon-size=48 --title="Shock OS Release Upgrader" --text="The upgrade to Shock OS $upgrto_version $upgrto_codename is available."

    #the authentication element begins

    SAE_PC="5555"

    SAE_ATTEMPTS=1

    SAE_PROGRAM_NAME="Shock OS Release Upgrader"

    until [[ "$SAE_PC" == "0" ]]        
    do

        if [[ $SAE_ATTEMPTS == 1 ]]
        then

            SAE_PASSWORD=$(yad --window-icon=changes-prevent --title="Authentication" --text="$SAE_PROGRAM_NAME requires your password to continue." --entry --hide-text --text-align=center --width=400 --button="Cancel":1 --button="Authenticate":0)
        
        else

            SAE_PASSWORD=$(yad --window-icon=changes-prevent --title="Authentication" --text="The password you entered was incorrect. Please try again." --entry --hide-text --text-align=center --width=400 --button="Cancel":1 --button="Authenticate":0)

        fi
        
        SAE_QUIT=$?

        if [[ "$SAE_QUIT" != "0" ]]
        then

            exit

        fi

        echo "$SAE_PASSWORD" | sudo -S echo "PERMISSION GRANTED" #replace apt update with desired command

        SAE_PC=$?

        let SAE_ATTEMPTS++

    done

    #the authentication element ends

    until [[ "$current_version" == "$upgrto_version" ]]
    do

        zenity --info --window-icon=/shock/shock-release-upgrader.svg --title="Prepare to Upgrade" --text="Before upgrading, please make sure of the following:

1. The system is connected to a constant power supply.

2. The internet connection is stable and reliable.

3. No APT packages are being installed, removed or upgraded.

NOTE: The logout and power options in the start menu will be temporarily disabled while upgrading because powering off the machine during the upgrade process is highly discouraged and may render your system unusable." --width=500

        ex=$?

        if [[ "$ex" != "0" ]]
        then

            exit

        fi

        dconf write /org/mate/desktop/lockdown/disable-log-out "true" # Stops the user from accessing the shutdown menu while the system is being upgraded.

        echo "$password" | sudo -S rm -R /usr/share/shock-release-upgrader/*

        echo "$password" | sudo -S wget https://raw.githubusercontent.com/Shock-OS/Upgrade-Packages/main/$upgrto_version-preupgr-script -P /usr/share/shock-release-upgrader

        if [[ -f /usr/share/shock-release-upgrader/$upgrto_version-preupgr-script ]]
        then

            echo "$password" | sudo -S chmod +x /usr/share/shock-release-upgrader/$upgrto_version-preupgr-script

            echo "$password" | sudo -S /usr/share/shock-release-upgrader/$upgrto_version-preupgr-script

        fi

        echo "$password" | sudo -S wget https://sourceforge.net/projects/shock-os-download-mirror/files/Upgrade-Packages/shock-release-upgrader/$upgrto_version.zip -P /usr/share/shock-release-upgrader 2>&1 | sed -u 's/.* \([0-9]\+%\)\ \+\([0-9.]\+.\) \(.*\)/\1\n# Downloading at \2\/s, ETA \3/' | yad --window-icon=/shock/shock-release-upgrader.svg --progress --title="Downloading Upgrade Pack..." --width=310 --text="Downloading the Shock OS $upgrto_version $upgrto_codename upgrade pack. This may take a while..." --no-buttons --auto-close --no-escape --undecorated

        echo "$password" | sudo -S mkdir /usr/share/shock-release-upgrader/$upgrto_version

        echo "$password" | sudo -S unzip /usr/share/shock-release-upgrader/$upgrto_version.zip -d /usr/share/shock-release-upgrader/$upgrto_version 2>&1 | yad --progress --pulsate --auto-close --window-icon=/shock/shock-release-upgrader.svg --title="Unpacking Upgrade Pack..." --text="Unpacking the Shock OS $upgrto_version $upgrto_codename upgrade pack. Please sit tight, this may take a while..." --no-buttons --no-escape --undecorated --progress-text=""

        echo "$password" | sudo -S chmod --recursive 755 /usr/share/shock-release-upgrader/$upgrto_version/DEBIAN

        echo "$password" | sudo -S dpkg-deb --build -Zxz /usr/share/shock-release-upgrader/$upgrto_version 2>&1 | yad --window-icon=/shock/shock-release-upgrader.svg --title="Preparing to Upgrade..." --text="Preparing to upgrade to Shock OS $upgrto_version $upgrto_codename. Please sit tight, this may take a while..." -no-buttons --no-escape --undecorated --auto-close --progress --pulsate --progress-text="" --no-buttons

        echo "$password" | sudo -S apt install -y /usr/share/shock-release-upgrader/$upgrto_version.deb 2>&1 | yad --progress --pulsate --auto-close --window-icon=/shock/shock-release-upgrader.svg --title="Upgrading to Shock OS $upgrto_version $upgrto_codename..." --text="Upgrading to Shock OS $upgrto_version $upgrto_codename. Please sit tight, this may take a while..." --no-buttons --no-escape --undecorated --progress-text=""

        echo "$password" | sudo -S wget https://raw.githubusercontent.com/Shock-OS/Upgrade-Packages/main/$upgrto_version-postupgr-script -P /usr/share/shock-release-upgrader

        if [[ -f /usr/share/shock-release-upgrader/$upgrto_version-postupgr-script ]]
        then

            echo "$password" | sudo -S chmod +x /usr/share/shock-release-upgrader/$upgrto_version-postupgr-script

            echo "$password" | sudo -S /usr/share/shock-release-upgrader/$upgrto_version-postupgr-script

        fi

        dconf write /org/mate/desktop/lockdown/disable-log-out "'false'" # Allows the user to access the shutdown menu.

        if [[ "$(echo "$(apt-show-versions shock-os-metapackage)" | cut -d" " -f2-2)" != "$upgrto_version" ]]
        then

            yad --window-icon=/shock/shock-release-upgrader.svg --title="Shock OS Release Upgrader" --image=emblem-important --text="The upgrade to Shock OS $upgrto_version $upgrto_codename failed. Please make sure of the following before retrying:

- The internet connection is stable.

- No packages are being installed, removed or upgraded (APT must not be running)." --button="Retry"

        else

            yad --window-icon=/shock/shock-release-upgrader.svg --title="Shock OS Release Upgrader" --image=emblem-default --text="The upgrade to Shock OS $upgrto_version $upgrto_codename completed successfully! Changes will take full effect upon reboot." --button="Reboot Later":1 --button="Reboot Now":0

            rb=$?

            if [[ "$rb" == "0" ]]
            then

                echo "$password" | sudo -S reboot

            fi

        fi

        current_version="$(echo "$(apt-show-versions shock-os-metapackage)" | cut -d" " -f2-2)"

        current_version_nodecimal="$(echo "$(apt-show-versions shock-os-metapackage)" | cut -d" " -f2-2)"

        if [[ "$current_version" == *"."* ]]
        then

            current_version_nodecimal=$(sed 's/[.].*//' <<< "$current_version")

        fi

    done

fi

    

    

















