#!/bin/bash

#this is the initial setup program for Bullseye-based versions of Shock OS and VanillaPi

#the default target should be set to 'multi-user.target'

#the 'shock' user should be set to autologin

clear

sudo dpkg-reconfigure tzdata #this will allow the user to select their country and timezone

sudo dpkg-reconfigure locales #this will allow the user to select their locale

sudo dpkg-reconfigure keyboard-configuration #this will allow the user to select their keyboard layout

sleep 1

sudo setupcon

sleep 1

#the whiptail user creation patch begins

ic="no"

until [[ "$ic" == "0" ]]
do

    ua="no"

    until [[ "$ua" == "y" ]]
    do

        x=""

        until [[ ! -z "$x" ]] && [[ "$x" != *" "* ]] && [[ "$(expr "$x" : "^[a-z][-a-z0-9_]*\$" )" != "0" ]]
        do

            x=$(whiptail --title "Create a Username" --inputbox "Please enter your desired username:" 8 40 3>&1 1>&2 2>&3)

            if [[ -z "$x" ]] || [[ "$x" == *" "* ]]
            then

                whiptail --title "Invalid Username" --msgbox "Your username cannot be empty or contain spaces. Please try again." 10 50

            elif [[ "$(expr "$x" : "^[a-z][-a-z0-9_]*\$" )" == "0" ]] #if username doesn't match the regular expression configured via the NAME_REGEX variable
            then

                whiptail --title "Invalid Username" --msgbox "That username does not meet the necessary requirements. Please try again." 10 50

            fi

        done

        if [[ -d /home/$x ]]
        then

            whiptail --title "User Already Exists" --msgbox "The username '$x' is already taken. Please choose a different one." 10 50

            ua="no"

        else

            ua="y"

        fi

    done

    x=$(echo "$x" | awk '{print tolower($0)}') #this command makes all the letters lowercase

    x=$(echo ${x//[[:blank:]]/}) #this command removes all spaces

    x=$(echo "$x" | tr -cd '[:alnum:]._-') #this command removes all numbers

    echo $x

    full_name=""

    until [[ ! -z "$full_name" ]] && [[ $full_name = *[!\ ]* ]]
    do

        full_name=$(whiptail --title "Full Name" --inputbox "Please enter your full name:" 10 50 3>&1 1>&2 2>&3)

        if [[ -z "$full_name" ]] || ! [[ $full_name = *[!\ ]* ]]
        then

            whiptail --title "Invalid Full Name" --msgbox "Your full name cannot be empty or only consist of spaces. Please try again." 10 50

        fi

    done

    whiptail --title "Final Check" --yesno "Is this information correct?

    Username: $x

    Full Name: $full_name" 11 50

    ic=$?

done

passv="no"

until [[ "$passv" == "y" ]]
do

    pa1=""

    until [[ ! -z "$pa1" && "$pa1" != *" "* ]] #makes sure the string is not just spaces or empty
    do

        pa1=$(whiptail --title "Create a Password" --passwordbox "For security reasons, a strong password is highly recommended. Strong passwords consist of:
- at least eight characters
- both lower and upper case letters
- numbers
- special characters

Please create a password:" 15 50 3>&1 1>&2 2>&3)

        if [[ -z "$pa1" || "$pa1" == *" "* ]]
        then

            whiptail --title "Invalid Password" --msgbox "Your password cannot be empty or contain spaces. Please try again." 10 50

        fi

    done

    pa2=$(whiptail --title "Verify Password" --passwordbox "Please verify the password:" 10 50 3>&1 1>&2 2>&3)

    if [[ "$pa1" == "$pa2" ]]
    then

        passv="y"

        password="$pa1"

    else

        whiptail --title "Passwords Did Not Match" --msgbox "Oops! The passwords did not match. Please try again." 10 50

        passv="no"

    fi

done

sudo adduser --disabled-password --gecos "$full_name" $x #the user has been created

echo "$x:$password" | sudo chpasswd

pa1=""

pa2=""

password=""

sudo usermod -a -G adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,render,netdev,spi,i2c,gpio $x #the user has been added to the required groups

whiptail --title "User Created Successfully" --msgbox "Congratulations! You have successfully created a user." 10 50

#the whiptail user creation patch begins

echo "%$x ALL=(ALL:ALL) NOPASSWD:ALL" | sudo sudo EDITOR='tee' visudo -f /etc/sudoers.d/initsetup_rootpriv #enables the user to run all commands without a password (temporarily)

sudo systemctl set-default multi-user

#the setup finalizer temporary autologin patch begins

sudo sed -i 's/#NAutoVTs=6/NAutoVTs=1/g' /etc/systemd/logind.conf

sudo echo "[Service]
ExecStart=
ExecStart=-/usr/sbin/agetty --autologin $x --noclear %I $TERM" | sudo tee -a /etc/systemd/system/getty@tty1.service.d/override.conf

sudo systemctl is-enabled getty@tty1.service

sudo systemctl enable getty@tty1.service

sudo systemctl daemon-reload

sudo echo '

file3=$(cat /shock/setupvalue)

echo $file3

if [[ $file3 == 1 ]]
then

    shock-startup

fi' >> "/home/$x/.bashrc"

#the setup finalizer temporary autologin patch ends

clear

file1=`cat setupvalue`

echo $file1

echo "1" > setupvalue

file1=`cat setupvalue`

echo $file1

clear

whiptail --title "Rebooting..." --msgbox "The system will now perform a series of reboots." 10 50

sudo reboot





