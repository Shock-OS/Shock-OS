#!/bin/bash

if [[ -f ~/.shock_kidprofile ]]
then

    yad --window-icon=/shock/parental-controls.png --center --fixed --undecorated --title="Parental Controls" --text="You cannot access Parental Controls because you are logged in as a child profile." --button="Dismiss"

    exit

fi

#the authentication element begins

SAE_PC="5555"

SAE_ATTEMPTS=1

SAE_PROGRAM_NAME="Parental Controls"

until [[ "$SAE_PC" == "0" ]]        
do

    if [[ $SAE_ATTEMPTS == 1 ]]
    then

        SAE_PASSWORD=$(yad --window-icon=changes-prevent --title="Authentication" --text="$SAE_PROGRAM_NAME requires your password to continue." --entry --hide-text --text-align=center --width=400 --button="Cancel":1 --button="Authenticate":0)
    
    else

        SAE_PASSWORD=$(yad --window-icon=changes-prevent --title="Authentication" --text="The password you entered was incorrect. Please try again." --entry --hide-text --text-align=center --width=400 --button="Cancel":1 --button="Authenticate":0)

    fi
    
    SAE_QUIT=$?

    if [[ "$SAE_QUIT" != "0" ]]
    then

        exit

    fi

    echo "$SAE_PASSWORD" | sudo -S echo "PERMISSION GRANTED" #replace apt update with desired command

    SAE_PC=$?

    let SAE_ATTEMPTS++

done

#the authentication element ends

userlist=""

users_on_sys=(/home/*)

users_num=$(ls /home | wc -l)

current_user=0

while (( $current_user < $users_num ))
do

      newbutton="${users_on_sys[$current_user]}"

      newbutton="${newbutton##*/}"

      if [[ -f /home/$newbutton/.shock_kidprofile ]]
      then

          if [[ -z "$userlist" ]]
          then

            userlist="$newbutton"

          else

            userlist="$userlist!$newbutton"

          fi

      fi

      let current_user++

done

echo $userlist

if [[ -z "$userlist" ]]
then

    yad --window-icon=/shock/parental-controls.png --undecorated --center --fixed --title="Parental Controls" --text="There are currently no child profiles on your system. To add a child profile, create a new user through the 'Users' application and tick the  'Child Profile' checkbox." --button="Dismiss"

    exit

fi

output=$(yad --window-icon=/shock/parental-controls.png --title="Parental Controls" --text="You can manage the limits and restrictions of child profiles." --form --field="Child Profile:":CB "$userlist" --field="Restriction:":CB 'Screen Time Limit' --button="Next")

utr=$(echo "$output" | awk -F'|' '{print $1}')

limit=$(echo "$output" | awk -F'|' '{print $2}')

if [[ "$limit" == "Screen Time Limit" ]]
then

    if [[ -f /home/$utr/.shock_screen_time_limit ]]
    then

        yad --window-icon=/shock/parental-controls.png --title="Parental Controls" --text="This user already has a screen time limit set. What would you like to do?" --button="Overwrite":0 --button="Remove":1 --button="Cancel":2

        ex3=$?

        if [[ "$ex3" != "0" ]] && [[ "$ex3" != "1" ]]
        then

            yad --window-icon=/shock/parental-controls.png --title="Parental Controls" --text="Operation aborted. No changes were made to your system." --button="Dismiss"

            exit

        elif [[ "$ex3" == "1" ]]
        then

            echo "$password" | sudo -S chattr -i /home/$utr/.shock_screen_time_limit

            echo "$password" | sudo -S rm /home/$utr/.shock_screen_time_limit

            echo "$password" | sudo -S chattr -R -i /home/$utr/.shock_pcstl

            echo "$password" | sudo -S rm -r /home/$utr/.shock_pcstl

            yad --window-icon=/shock/parental-controls.png --title="Parental Controls" --text="The scree time limit for the user '$utr' was removed successfully." --button="Dismiss"

            exit

        fi

    fi

    #the time limit patch begins

    minutes=$(yad --window-icon=/shock/parental-controls.png --title="Screen Time Limit" --text="You can set a daily screen time limit for $utr." --form --field="Daily screen time limit (in minutes):":NUM '120!10..1440' --button="Apply")

    ex4=$?

    if [[ "$ex4" != "0" ]]
    then

        yad --window-icon=/shock/parental-controls.png --title="Parental Controls" --text="Operation aborted. No changes were made to your system." --button="Dismiss"

        exit

    fi

    minutes=$(echo "$minutes" | sed 's/|//')

    echo "$password" | sudo -S chattr -i /home/$utr/.shock_screen_time_limit

    echo "$password" | sudo -S rm /home/$utr/.shock_screen_time_limit

    echo "$password" | sudo -S touch /home/$utr/.shock_screen_time_limit

    echo "$password" | sudo -S echo "$minutes" | sudo tee /home/$utr/.shock_screen_time_limit

    echo "$password" | sudo -S chattr +i /home/$utr/.shock_screen_time_limit

    echo "$password" | sudo -S touch /usr/bin/shock-$utr-pcstl

    echo "$password" | sudo -S echo '#!/bin/bash

'"if [[ -f /home/$utr/.shock_kidprofile ]] #if kid profile
then

    if [[ -f /home/$utr/.shock_screen_time_limit ]] #screen time limit
    then

        "'start_date="$(date +%F)"

        minutes=$(cat '"/home/$utr/.shock_screen_time_limit)

        if [[ -f /home/$utr/.shock_pcstl/"'$(date +%F) ]]
        then

            minutes=$(cat '"/home/$utr/.shock_pcstl/"'$(date +%F))

            if [[ $minutes == "TIME IS UP" ]]
            then

                '"sudo killall -15 -u $utr

                sudo killall -9 -u $utr

                exit

            fi

        else

            sudo chattr -R -i /home/$utr/.shock_pcstl

            rm -r /home/$utr/.shock_pcstl

            mkdir /home/$utr/.shock_pcstl

            touch /home/$utr/.shock_pcstl/"'$(date +%F)

            '"sudo chattr -R +i /home/$utr/.shock_pcstl

        fi

        sudo chattr -R -i /home/$utr/.shock_pcstl

        "'echo $minutes | tee '"/home/$utr/.shock_pcstl/"'$(date +%F)

        '"sudo chattr -R +i /home/$utr/.shock_pcstl

        "'while (($minutes>0))
        do

            sleep 60

            '"if ! [[ -f /home/$utr/.shock_pcstl/"'$(date +%F) ]]
            then

                if [[ "$start_date" != "$(date +%F)" ]] #if different date
                then

                    start_date="$(date +%F)"

                    minutes=$(cat '"/home/$utr/.shock_screen_time_limit)

                    sudo chattr -R -i /home/$utr/.shock_pcstl

                    rm -r /home/$utr/.shock_pcstl

                    mkdir /home/$utr/.shock_pcstl

                    touch /home/$utr/.shock_pcstl/"'$(date +%F)

                    '"sudo chattr -R +i /home/$utr/.shock_pcstl

                else

                    sudo chattr -R -i /home/$utr/.shock_pcstl

                    touch /home/$utr/.shock_pcstl/"'$(date +%F)

                    echo "TIME IS UP" | tee '"/home/$utr/.shock_pcstl/"'$(date +%F)

                    '"sudo chattr -R +i /home/$utr/.shock_pcstl

                    sudo killall -15 -u $utr

                    sudo killall -9 -u $utr

                    exit

                fi

            fi

            "'current_user=$(sudo shock-view-current-user)

            if [[ $current_user == ''*"'"CURRENT USER:$utr"'"*'' ]]
            then

                let minutes--

                '"sudo chattr -R -i /home/$utr/.shock_pcstl

                "'echo $minutes | tee '"/home/$utr/.shock_pcstl/"'$(date +%F)

                '"sudo chattr -R +i /home/$utr/.shock_pcstl

            fi

            "'if (($minutes<6))
            then

                zenity --notification --text="Your screen time is almost up. You have $minutes minutes of screen time left. You may want to find a stopping point and save your work."

            fi

        done

        '"sudo chattr -R -i /home/$utr/.shock_pcstl

        "'echo "TIME IS UP" | tee '"/home/$utr/.shock_pcstl/"'$(date +%F)

        '"sudo chattr -R +i /home/$utr/.shock_pcstl  

        sudo killall -15 -u $utr

        sudo killall -9 -u $utr

        exit

    fi

fi" | sudo tee /usr/bin/shock-$utr-pcstl

    echo "$password" | sudo -S chmod +x /usr/bin/shock-$utr-pcstl

    echo "$password" | sudo -S echo "# Allow $utr to run screen time limit upon startup without requiring a password

$utr ALL = NOPASSWD:/usr/bin/shock-$utr-pcstl" | sudo EDITOR='tee' visudo -f /etc/sudoers.d/shock-$utr-pcstl

    yad --window-icon=/shock/parental-controls.png --width=500 --title="Parental Controls" --text="A daily screen time limit of $minutes minutes has been set for $utr." --button="Dismiss"

    #the time limit patch ends

fi
