#!/bin/bash

type="$3"

full_name="$2"

package="$4"

icon="$5"

id="$(basename "$5")"

#THE LOADING FUNCTIONS BEGIN

function start_loading() {

yad --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --progress-text="Loading app info..." --center --progress --pulsate --auto-close --undecorated --no-buttons --skip-taskbar & killpid=$!

}

function end_loading() {

kill -9 $killpid

}

#THE LOADING FUNCTIONS END

#THE NOTIFICATION FUNCIONS BEGIN

function show_notification() {

mkdir -p ~/.cache/shock-tmp/shockware-center

if [[ -f ~/.cache/shock-tmp/shockware-center/notification_instances ]]
then

    local instances=$(($(cat ~/.cache/shock-tmp/shockware-center/notification_instances)+1))

    echo "$instances" | tee ~/.cache/shock-tmp/shockware-center/notification_instances

else

    yad --notification --image=/usr/share/shockware-center/icon.svg --icon-size=30 --text="Software is being installed. Please do not turn off your computer." --command='' & echo "$!" | tee ~/.cache/shock-tmp/shockware-center/notification_killpid

    echo "1" | tee ~/.cache/shock-tmp/shockware-center/notification_instances

fi

}

function hide_notification() {

if (($(cat ~/.cache/shock-tmp/shockware-center/notification_instances)>1)) #if other apps are being installed, keep the notification
then

    local instances=$(($(cat ~/.cache/shock-tmp/shockware-center/notification_instances)-1))

    echo "$instances" | tee ~/.cache/shock-tmp/shockware-center/notification_instances

else #kill the notification

    rm ~/.cache/shock-tmp/shockware-center/notification_instances

    kill "$(cat ~/.cache/shock-tmp/shockware-center/notification_killpid)"

    rm ~/.cache/shock-tmp/shockware-center/notification_killpid

fi

}

#THE NOTIFICATION FUNCTIONS END

function apt_fetch_info() {

apt_icon="$(find /var/lib/app-info/icons/*/64x64/"$package"_* | head -1)" #prefer 64x64 icons

if [[ -z "$apt_icon" ]]
then

    apt_icon="$(find /var/lib/app-info/icons/*/*/"$package"_* | head -1)"

fi

details="$(apt show $package)"

if [[ "$details" == *"State: not a real package (virtual)"* ]] #if virtual package (likely only to happen on a 32-bit system)
then

    if [[ "$type" == "A" ]] #if only apt package.
    then

        end_loading

        yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="$full_name is not available." --button="Dismiss"\!gtk-quit

        exit

    else #if duplicate package

        irbuttons_apt=""

        apt_icon="emblem-important"

        tmpfile="$(mktemp)"

        echo "$full_name is not available." | tee "$tmpfile"

    fi

else #if normal package

    installed_packages=($(apt list --installed | awk -F/ '{print $1}' | uniq)) #ChatGPT

    if [[ " ${installed_packages[@]} " == *" $package "* ]] #if installed
    then

	    irbuttons_apt='--button=Launch!mate-panel-launcher:3 --button=Remove!remove:4'

    else

	    irbuttons_apt='--button=Install!add:5'

    fi

    description="$(echo "$details" | grep -A 10000 Description:)"

    version="$(echo "$details" | grep Version:)"

    size="$(echo "$details" | grep Size:)"

    tmpfile="$(mktemp)"

    echo "$description

$version

$size" | tee "$tmpfile"

fi

}

function apt_launch() {

$package &

}

function wait_apt_lock() {

until (($(lslocks | grep -c apt)==0)) #waits until /var/lib/dpkg/lock-frontend is not being held
do

    echo "#Waiting for APT lock..."

    sleep 3

done

echo "#"

}

function apt_remove() {

yad --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --text="Are you sure you would like to remove $full_name$both?" --button="Yes, remove"\!gtk-remove --button="No, keep"\!gtk-cancel

ex=$?

if [[ "$ex" == "0" ]]
then

	{ wait_apt_lock; pkexec env DEBIAN_FRONTEND=gnome apt remove -y $package; } | yad --no-buttons --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --image="$icon" --title="Shockware Center" --text="Removing $full_name$both..." --text-align=center --progress-text="" --auto-close --progress --pulsate

    installed_packages=($(apt list --installed | awk -F/ '{print $1}' | uniq)) #ChatGPT

    if [[ " ${installed_packages[@]} " != *" $package "* ]] #if removed successfully
    then

        yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-default --title="Shockware Center" --text="$full_name$both was successfully removed." --button="Dismiss"\!gtk-quit

    else

        yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="Failed to remove $full_name$both." --button="Dismiss"\!gtk-quit

    fi

fi

}

function apt_install() {

show_notification

{ wait_apt_lock; pkexec env DEBIAN_FRONTEND=gnome apt-get install --show-progress -y $package | stdbuf -o0 grep 'Progress:' | stdbuf -o0 grep -oP '\d+(?=%)' | (echo "#Pending..."; stdbuf -o0 sed 's/.*/&\n#&%/g'); } | yad --no-buttons --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --image="$icon" --text="Installing $full_name$both...
<small>The installation will continue in the background if this window is closed.</small>" --text-align=center --auto-close --progress

hide_notification

installed_packages=($(apt list --installed | awk -F/ '{print $1}' | uniq)) #ChatGPT

if [[ " ${installed_packages[@]} " == *" $package "* ]] #if installed successfully
then

    yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-default --title="Shockware Center" --text="$full_name$both was successfully installed." --button="Dismiss"\!gtk-quit

else

    yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="Failed to install $full_name$both. Please double check your internet connection and try again later." --button="Dismiss"\!gtk-quit

fi

}

function flatpak_fetch_info() {

id="${id::-4}"

installed_flatpaks=($(flatpak list --columns=app | uniq)) #ChatGPT

if [[ " ${installed_flatpaks[@]} " == *" $id "* ]] #if installed
then

	irbuttons_flatpak='--button=Launch!mate-panel-launcher:6 --button=Remove!remove:7'

else

	irbuttons_flatpak='--button=Install!add:8'

fi

description=$(grep -A 10000 "<id>$id</id>" /var/lib/flatpak/appstream/flathub/$arch/active/appstream.xml | grep "<description>" | head -n1 | sed -e 's/<[^>]*>//g' -e 's/^[[:space:]]*//')

if [[ -n "$description" ]] #if description found
then

    description="Description: $description"

else #if no description found

    description="No description found."

fi

tmpfile2="$(mktemp)"

echo "$description" | tee "$tmpfile2"

}

function flatpak_launch() {

flatpak run "$id" &

}

function flatpak_remove() {

yad --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --text="Are you sure you would like to remove $full_name$both?" --button="Yes, remove"\!remove --button="No, keep"\!gtk-cancel

ex=$?

if [[ "$ex" == "0" ]]
then

	flatpak uninstall -y "$id" | yad --no-buttons --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --image="$icon" --text="Removing $full_name$both..." --text-align=center --progress-text="" --auto-close --progress --pulsate

    installed_flatpaks=($(flatpak list --columns=app | uniq)) #ChatGPT

    if [[ " ${installed_flatpaks[@]} " != *" $id "* ]] #if removed successfully
    then

        yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-default --title="Shockware Center" --text="$full_name$both was successfully removed." --button="Dismiss"\!gtk-quit

    else

        yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="Failed to remove $full_name$both." --button="Dismiss"\!gtk-quit

    fi

fi

}

function flatpak_install() {

show_notification

flatpak install -y "$id" | stdbuf -o0 grep 'Installing' | while read progress
do

    current_progress="$(echo "$progress" | grep -oP '\d+(?=%)')"

    flatpak_counter="$(echo "$progress" | grep -oE "[0-9]+/[0-9]+")"

    current_flatpak="${flatpak_counter%%/*}"

    total_flatpaks="${flatpak_counter#*/}"

    if (($(echo "$flatpak_counter" | wc -l)==1))
    then

        if [[ -z "$flatpak_counter" ]]
        then

            percentage="$current_progress"

        else

            percentage=$(($(($((current_flatpak-1))*100/total_flatpaks))+$((current_progress/total_flatpaks))))

        fi

        echo "${percentage}n"

        echo "#${percentage}%"

    fi

done | yad --no-buttons --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --image="$icon" --text="Installing $full_name$both...
<small>The installation will continue in the background if this window is closed.</small>" --text-align=center --auto-close --progress

hide_notification

installed_flatpaks=($(flatpak list --columns=app | uniq)) #ChatGPT

if [[ " ${installed_flatpaks[@]} " == *" $id "* ]] #if installed successfully
then

    yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-default --title="Shockware Center" --text="$full_name$both was successfully installed." --button="Dismiss"\!gtk-quit

else

    yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="Failed to install $full_name$both. Please double check your internet connection and try again later." --button="Dismiss"\!gtk-quit

fi

}

start_loading

if [[ "$(getconf LONG_BIT)" == "32" ]]
then

    arch="arm"

else

    arch="aarch64"

fi

key="$RANDOM"

until (($(ps aux | grep -c "$key")==1))
do

    key="$RANDOM"

done

if [[ "$type" == "A" ]] #if APT package
then

    apt_fetch_info

	end_loading

	yad --window-icon=/usr/share/shockware-center/icon.svg --title="Details of $full_name" --text="APT package" --width=830 --height=300 --image="$apt_icon" --text-info --filename="$tmpfile" $irbuttons_apt

	ex=$?

	rm "$tmpfile"

	if [[ "$ex" == "3" ]] #launch
	then

		apt_launch

	elif [[ "$ex" == "4" ]] #remove
	then

		apt_remove

	elif [[ "$ex" == "5" ]] #install
	then

		apt_install

	fi

elif [[ "$type" == "F" ]] #if Flatpak
then

	flatpak_fetch_info

	end_loading

	yad --window-icon=/usr/share/shockware-center/icon.svg --title="Details of $full_name" --text="Flatpak application" --width=830 --height=300 --image="$icon" --text-info --wrap --filename="$tmpfile2" $irbuttons_flatpak

	ex=$?

	rm "$tmpfile2"

	if [[ "$ex" == "6" ]] #launch
	then

		flatpak_launch

	elif [[ "$ex" == "7" ]] #remove
	then

		flatpak_remove

	elif [[ "$ex" == "8" ]] #install
	then

		flatpak_install

	fi

else #if both

    apt_fetch_info

    yad --plug=$key --tabnum=1 --image="$apt_icon" --text-info --filename="$tmpfile" &

    flatpak_fetch_info

    yad --plug=$key --tabnum=2 --image="$icon" --text-info --wrap --filename="$tmpfile2" &

    end_loading

    if [[ " ${installed_packages[@]} " == *" $package "* ]] #if installed
    then

	    irbuttons_apt='--button=Launch APT!mate-panel-launcher:3'

        irbuttons_apt_2='--button=Remove APT!remove:4'

    else

	    irbuttons_apt='--button=Install APT!add:5'

    fi

    if [[ " ${installed_flatpaks[@]} " == *" $id "* ]] #if installed
    then

	    irbuttons_flatpak='--button=Launch Flatpak!mate-panel-launcher:6'

        irbuttons_flatpak_2='--button=Remove Flatpak!remove:7'

    else

	    irbuttons_flatpak='--button=Install Flatpak!add:8'

    fi

    yad --window-icon=/usr/share/shockware-center/icon.svg --title="Details of $full_name" --text="$full_name is available from both APT and Flatpak." --width=830 --height=300 --notebook --key=$key --tab="APT" --tab="Flatpak" "$irbuttons_apt" "$irbuttons_apt_2" "$irbuttons_flatpak" "$irbuttons_flatpak_2"

    ex=$?

    rm "$tmpfile"

    rm "$tmpfile2"

    if [[ "$ex" == "3" ]] #launch APT
	then

		apt_launch

	elif [[ "$ex" == "4" ]] #remove APT
	then

        both=" (APT)"

		apt_remove

	elif [[ "$ex" == "5" ]] #install APT
	then

        both=" (APT)"

		apt_install

	elif [[ "$ex" == "6" ]] #launch FLATPAK
	then

		flatpak_launch

	elif [[ "$ex" == "7" ]] #remove FLATPAK
	then

        both=" (Flatpak)"

		flatpak_remove

	elif [[ "$ex" == "8" ]] #install FLATPAK
	then

        both=" (Flatpak)"

		flatpak_install

	fi

fi

    

	

