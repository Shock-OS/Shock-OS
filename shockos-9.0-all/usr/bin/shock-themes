#!/bin/bash

IFS=$'\n'

runuser="$(whoami)"

nl="${#runuser}"

nl=$((nl+1))

while true
do

    sudo shock-themes-sync-daemon

	yadlist=("/usr/share/shock/shock-logo.svg" "The default Shock OS look and feel" "Default")

	if (($(ls ~/.themes | wc -l)>0))
	then

		for i in ~/.themes/* #list all themes
		do

            current_theme="$(basename "$i")"

            if [[ "$(ls -d "$i"/*/)" == "${i}/metacity-1/" ]]
            then

			    yadlist+=("gnome-settings-theme" "Metacity theme" "${current_theme:$nl}")

            else

                yadlist+=("gnome-settings-theme" "Theme pack" "${current_theme:$nl}")

            fi

		done

	fi

	for i in ~/.icons/* #list all icons
	do

        current_theme="$(basename "$i")"

		if  [[ -d "$(find "$i"/* -name places | head -n1)" || -d "$(find "$i"/* -name status | head -n1)" ]] && [[ "$(cat "$i/index.theme")" == *"[Icon Theme]"* ]]
		then

			yadlist+=("folder-images" "Icon pack" "${current_theme:$nl}")

		fi

	done

	for i in ~/.icons/* #list all cursors
	do

        current_theme="$(basename "$i")"

		if  [[ -d "$(find "$i"/* -name cursors | head -n1)" ]] || [[ -f "$i/cursors.theme" ]]
		then

			yadlist+=("input-mouse" "Cursor pack" "${current_theme:$nl}")

		fi

	done

	output="$(yad --window-icon=gnome-settings-theme --title="Themes" --text="Install, remove, rename or use themes, icons and cursors." --list --column="Type":IMG --column=ToolTip:HD --column=Name --tooltip-column=2 --always-print-result --search-column=3 --response=4 --height=300 --buttons-layout=spread --button="Browse"\!applications-internet --button="Install"\!add --button="Remove"\!remove --button="Rename"\!gtk-edit --button="Use"\!dialog-ok "${yadlist[@]}"
)"

	ex=$?

	name=$(echo $output | awk 'BEGIN {FS="|" } { print $3 }')

	type=$(echo $output | awk 'BEGIN {FS="|" } { print $2 }')

    if [[ "$ex" == "0" ]] #browse
    then

        xdg-open https://www.mate-look.org/browse

	elif [[ "$ex" == "1" ]] #install
	then

		cd ~/

		file="$(yad --window-icon=gnome-settings-theme --title="Install" --text="Please select a theme, icon or cursor pack to install. You may select a folder or a compressed archive." --file --button="Install"\!document-open)"

		ex=$?

		if [[ "$ex" == "0" ]]
		then

            if [[ "$file" == *".deb" ]]
            then

                yad --window-icon=gnome-settings-theme --image=emblem-important --title="Install" --text="$file is not a compatible theme file. Please choose a folder or a compressed archive containing the theme you want to install." --button="Dismiss"\!gtk-quit

            else

                yad --fixed --window-icon=gnome-settings-theme --title="Themes" --progress-text="Installing $(basename "$file")..." --center --progress --pulsate --auto-close --undecorated --no-buttons --skip-taskbar & killpid=$!

                tmpdir=$(mktemp -d)

			    mkdir -p "$tmpdir"

			    cd "$tmpdir"

			    if [[ -f "$file" ]] #if archive, then extract archive
			    then

				    unp -f "$file"

			    else #if folder

				    cp -r "$file" .

			    fi

                found_dir="TRUE"

                itd="$(find "$tmpdir" -name index.theme | head -n1 | rev | cut -d '/' -f 2- | rev)"

                mtd="$(find "$tmpdir" -name metacity-1 | head -n1 | rev | cut -d '/' -f 2- | rev)"

                gtkd="$(find "$tmpdir" -name 'gtk-*' | head -n1 | rev | cut -d '/' -f 2- | rev)"

                sid="$(find "$tmpdir" -name settings.ini | head -n1 | rev | cut -d '/' -f 2- | rev)"

                if [[ -d "$itd" ]]
                then

                    cd "$itd"

                    cd ..

                    for i in $(find . -name index.theme)
                    do
                        inherit_line=$(grep -m 1 -e '^Inherits=' "$i")

                        inherit_line=$(echo "$inherit_line" | sed 's/,Adwaita//') #removes Adwaita

                        inherit_line=$(echo "$inherit_line" | sed 's/Adwaita,//') #removes Adwaita

                        inherit_line=$(echo "$inherit_line" | sed 's/Adwaita//') #removes Adwaita

                        inherit_line=$(echo "$inherit_line" | sed 's/,hicolor//') #removes hicolor

                        inherit_line=$(echo "$inherit_line" | sed 's/hicolor,//') #removes hicolor

                        inherit_line=$(echo "$inherit_line" | sed 's/hicolor//') #removes hicolor

                        if [[ "${#inherit_line}" == "9" ]] #if no fallback themes
                        then

                            sed -i "s|^Inherits=.*|Inherits=shock-light-blue,shock-dark-blue,Adwaita,hicolor|" "$i"

                        else

                            sed -i "s|^Inherits=.*|$inherit_line,shock-light-blue,shock-dark-blue,Adwaita,hicolor|" "$i"

                        fi

                    done

                    #the above for loop sets the Shock OS theme as a fallback theme

                elif [[ -d "$mtd" ]]
                then

                    cd "$mtd"

                    cd ..

                elif [[ -d "$gtkd" ]]
                then

                    cd "$gtkd"

                    cd ..

                elif [[ -d "$sid" ]]
                then

                    cd "$sid"

                    cd ..

                else

                    found_dir="FALSE"

                fi

                worked="FALSE"

                if [[ "$found_dir" == "TRUE" ]]
                then

                    for a in /usr/share/shock-themes/16x16/*
                    do

                        for b in $(find . -name "$(basename "$a")")
                        do

                            if [[ -n "$b" ]]
                            then

                                cp -f "/usr/share/shock-themes/$(identify -format "%wx%h" "$b")/$(basename "$a")" "$b"

                            fi

                        done

                    done

			        for i in *
			        do

				        if [[ -d "$(find "$i" -name cursors | head -n1)" || -f "$i/cursors.theme" || "$(cat "$i/index.theme")" == *"[Icon Theme]"* ]] && [[ -f "$i/index.theme" ]]
			            then

                            worked="TRUE"

                            mkdir -p ~/.icons

                            mkdir -p ~/.shock-icons

                            if [[ -d ~/.shock-icons/"$i" ]] #if directory with the same name already exists
                            then

                                dn=1

                                until [[ ! -d ~/.shock-icons/"$i ($dn)" ]]
                                do

                                    dn=$((dn+1))

                                done

                                mkdir -p ~/.shock-icons/"$i ($dn)"

                                cp -rf "$i"/* ~/.shock-icons/"$i ($dn)"

                            else

				                cp -rf "$i" ~/.shock-icons/"$i"

                            fi

			            fi

                        if [[ "$(cat "$i/index.theme")" == *"X-GNOME-Metatheme"* ]] || [[ -d "$(find "$i" -name metacity-1 | head -n1)" ]] || [[ -d "$(find "$i" -name 'gtk-*' | head -n1)" ]] || [[ -f "$i/settings.ini" ]]
                        then

                            worked="TRUE"

                            mkdir -p ~/.themes

                            mkdir -p ~/.shock-themes

                            if [[ -d ~/.shock-themes/"$i" ]] #if directory with the same name already exists
                            then

                                dn=1

                                until [[ ! -d ~/.shock-themes/"$i ($dn)" ]]
                                do

                                    dn=$((dn+1))

                                done

                                mkdir -p ~/.shock-themes/"$i ($dn)"

                                cp -rf "$i"/* ~/.shock-themes/"$i ($dn)"

                            else

                                cp -rf "$i" ~/.shock-themes/"$i"

                            fi

                        fi

			        done

                    cd ~/

			        rm -rf "$tmpdir" 

                fi

                kill -9 $killpid

                if [[ "$worked" == "FALSE" ]]
                then

                    yad --window-icon=gnome-settings-theme --image=emblem-important --title="Install" --text="$file does not appear to contain any themes, icon packs or cursor packs." --button="Dismiss"\!gtk-quit

                fi

            fi

		fi

	elif [[ "$ex" == "2" ]] #remove
	then

		if [[ "$type" == "The default Shock OS look and feel" ]]
        then

			yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove the default theme." --button="Dismiss"\!gtk-quit

		elif [[ "$type" == "Theme pack" ]] || [[ "$type" == "Metacity theme" ]] #if theme pack
		then

            if [[ "$(dconf read /org/mate/desktop/interface/gtk-theme)" == "'${runuser}_${name}'" ]] || [[ "$(dconf read /org/mate/marco/general/theme)" == "'${runuser}_${name}'" ]]
            then

                yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove $name because it is currently in use. Please switch to a different theme before removing $name." --button="Dismiss"\!gtk-quit

            else

                ttr="$(readlink ~/.themes/"${runuser}_$name")"

			    rm -r "$ttr"

            fi

		else #if icon or cursor pack

            if [[ "$(dconf read /org/mate/desktop/interface/icon-theme)" == "'${runuser}_${name}'" ]] || [[ "$(dconf write /org/mate/desktop/peripherals/mouse/cursor-theme)" == "'${runuser}_${name}'" ]]
            then

                if [[ "$type" == "Icon pack" ]]
                then

                    yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove $name because it is currently in use. Please switch to a different icon theme before removing $name." --button="Dismiss"\!gtk-quit

                else

                    yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove $name because it is currently in use. Please switch to a different cursor theme before removing $name." --button="Dismiss"\!gtk-quit

                fi

            else

                ttr="$(readlink ~/.icons/"${runuser}_$name")"

			    rm -r "$ttr"

            fi

		fi

	elif [[ "$ex" == "3" ]] #rename
	then

        if [[ "$type" == "The default Shock OS look and feel" ]]
		then

            yad --window-icon=gnome-settings-theme --title="Rename" --image=emblem-important --text="You cannot rename the default theme." --button="Dismiss"\!gtk-quit

        else

		    success="no"

		    until [[ "$success" == "yes" ]]
		    do
			    newname="$(yad --window-icon=gnome-settings-theme --title="Rename" --text="Please enter the new name for your theme pack." --entry --entry-text="$name" --button="Rename"\!gtk-edit)"

			    ex=$?

			    if [[ "$ex" == "0" ]]
			    then

				    success="yes"

				    if [[ "$type" == "Theme pack" ]] || [[ "$type" == "Metacity theme" ]] #if theme pack
				    then

					    if [[ -e ~/.themes/"$newname" ]] #if theme with that name already exists
					    then

						    yad --window-icon=gnome-settings-theme --image=emblem-important --title="Rename" --text="There is already a theme pack named '$newname'. Please choose a different name." --button="Retry"\!edit-undo

						    success="no"

					    else

						    mv ~/.themes/"${runuser}_$name" ~/.themes/"${runuser}_$newname"

						    if [[ "$(dconf read /org/mate/desktop/interface/gtk-theme)" == "'${runuser}_${name}'" || "$(dconf read /org/mate/marco/general/theme)" == "'${runuser}_${name}'" ]] && [[ "$type" == "Theme pack" ]] #if regular theme
						    then

							    dconf write /org/mate/desktop/interface/gtk-theme "'${runuser}_${newname}'"

							    dconf write /org/mate/marco/general/theme "'${runuser}_${newname}'"

                                flatpak override --user --env=GTK_THEME="${runuser}_${newname}"

						    elif [[ "$(dconf read /org/mate/marco/general/theme)" == "'${runuser}_${name}'" ]] && [[ "$type" == "Metacity theme" ]] #if metacity theme
                            then

                                dconf write /org/mate/marco/general/theme "'${runuser}_${newname}'"

                                flatpak override --user --env=GTK_THEME="${runuser}_${newname}"

                            fi

					    fi

				    else #if icon or cursor pack

					    if [[ -e ~/.icons/"$newname" ]] #if icon or cursor pack with that name already exists
					    then

						    yad --window-icon=gnome-settings-theme --image=emblem-important --title="Rename" --text="There is already an icon/cursor pack named '$newname'. Please choose a different name." --button="Retry"\!edit-undo

						    success="no"

					    else

						    mv ~/.icons/"${runuser}_$name" ~/.icons/"${runuser}_$newname"

						    if [[ "$(dconf read /org/mate/desktop/interface/icon-theme)" == "'${runuser}_${name}'" ]]
						    then

							    dconf write /org/mate/desktop/interface/icon-theme "'${runuser}_${newname}'"

                                flatpak override --user --env=ICON_THEME="${runuser}_${newname}"

						    fi

						    if [[ "$(dconf write /org/mate/desktop/peripherals/mouse/cursor-theme)" == "'${runuser}_${name}'" ]]
						    then

							    dconf write /org/mate/desktop/peripherals/mouse/cursor-theme "'${runuser}_${newname}'"

						    fi

					    fi

				    fi

			    else

                    break

                fi

		    done

        fi

	elif [[ "$ex" == "4" ]] #use
	then

		if [[ "$type" == "The default Shock OS look and feel" ]]
		then

			if ! [[ -f ~/.config/shock_themes ]]
			then

				touch ~/.config/shock_themes

				echo 'lod=light
color=blue' | tee ~/.config/shock_themes

			fi

			eval "$(cat ~/.config/shock_themes)"

			if [[ "$lod" == "light" ]]
			then

				theme_selection='^Light!Dark'

			elif [[ "$lod" == "dark" ]]
			then

				theme_selection='Light!^Dark'

			fi

			if [[ "$color" == "blue" ]]
			then

				color_selection='^Blue!Green!Orange!Pink!Purple!Red!Yellow'

			elif [[ "$color" == "green" ]]
			then

				color_selection='Blue!^Green!Orange!Pink!Purple!Red!Yellow'

			elif [[ "$color" == "orange" ]]
			then

				color_selection='Blue!Green!^Orange!Pink!Purple!Red!Yellow'

			elif [[ "$color" == "pink" ]]
			then

				color_selection='Blue!Green!Orange!^Pink!Purple!Red!Yellow'

			elif [[ "$color" == "purple" ]]
			then

				color_selection='Blue!Green!Orange!Pink!^Purple!Red!Yellow'

			elif [[ "$color" == "red" ]]
			then

				color_selection='Blue!Green!Orange!Pink!Purple!^Red!Yellow'

			elif [[ "$color" == "yellow" ]]
			then

				color_selection='Blue!Green!Orange!Pink!Purple!Red!^Yellow'

			fi

			output=$(yad --width=300 --window-icon=gnome-settings-theme --title="Themes" --form --field="Theme:":CB "$theme_selection" --field="Color:":CB "$color_selection" --button="Apply"\!gtk-ok --button="Cancel"\!gtk-cancel)

			ex=$?

			if [[ "$ex" == "0" ]]
			then

				lod=$(echo "$output" | awk -F'|' '{print $1}')

				lod=$(echo "$lod" | awk '{print tolower($0)}') #this command makes all the letters lowercase

				color=$(echo "$output" | awk -F'|' '{print $2}')

				color=$(echo "$color" | awk '{print tolower($0)}') #this command makes all the letters lowercase

				theme="shock-$lod-$color"

				dconf write /org/mate/desktop/interface/gtk-theme "'$theme'"

				dconf write /org/mate/marco/general/theme "'$theme'"

				dconf write /org/mate/desktop/interface/icon-theme "'$theme'"

				dconf write /org/mate/desktop/peripherals/mouse/cursor-theme "'mate-black'"

				echo "[Greeter]
theme-name=shock-dark-$color
icon-theme-name=shock-dark-$color
show-hostname=false
show-power=false
show-keyboard=false
show-clock=false" > /etc/lightdm/slick-greeter.conf

				echo "lod=$lod
color=$color" | tee ~/.config/shock_themes

			fi

		elif [[ "$type" == "Theme pack" ]]
		then

			dconf write /org/mate/desktop/interface/gtk-theme "'${runuser}_${name}'"

			dconf write /org/mate/marco/general/theme "'${runuser}_${name}'"

            flatpak override --user --env=GTK_THEME="${runuser}_${name}"

        elif [[ "$type" == "Metacity theme" ]]
        then

            dconf write /org/mate/marco/general/theme "'${runuser}_${name}'"

            flatpak override --user --env=GTK_THEME="${runuser}_${name}"

		elif [[ "$type" == "Icon pack" ]]
		then

			dconf write /org/mate/desktop/interface/icon-theme "'${runuser}_${name}'"

            flatpak override --user --env=ICON_THEME="${runuser}_${name}"

		elif [[ "$type" == "Cursor pack" ]]
		then

			dconf write /org/mate/desktop/peripherals/mouse/cursor-theme "'${runuser}_${name}'"

		fi

	else

		exit

	fi

done

