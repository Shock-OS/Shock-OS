#!/bin/bash

IFS=$'\n'

function detect_exit() {

local ex=$?

if ((ex!=0))
then

    exit

fi

}

while true
do

    sudo shock-fonts-sync

    source ~/.config/shock/fonts

    if (($(ls ~/.fonts | wc -l)>0))
    then

        remove_button='--button=Remove!remove:2'

    else

        remove_button=""

    fi

    font_to_change="$(yad --title="Fonts" --window-icon=preferences-desktop-font --form --text='Which system font would you like to change?' --field='':CB 'Application Font!Desktop Font!Document Font!Monospace Font!Window Title Font!Reset All Fonts to Defaults' --buttons-layout=spread --button="Browse"\!applications-internet:0 --button="Install"\!add:1 "$remove_button" --button="Next"\!go-next:4)"

    ex=$?

    if ((ex==0))
    then

        xdg-open https://fonts.google.com/

    elif ((ex==1))
    then

        file="$(yad --window-icon=preferences-desktop-font --title="Install Fonts" --file)"

        info="$(file "$file")"

        if [[ -f "$file" ]] && ! [[ "$info" == *"archive data"* || "$info" == *"compressed data"* ]] #if file selected
        then

            if [[ "$info" == *"OpenType font data"* || "$info" == *"TrueType Font data"* ]]
            then

                mkdir -p ~/.fonts

                cp "$file" ~/.fonts

            fi

        else

            if [[ -f "$file" ]] && [[ "$info" == *"archive data"* || "$info" == *"compressed data"* ]] #if archive selected
            then

                dir="$(mktemp -d)"

                cd "$dir"

                unp -f "$file"

                cd /

            elif [[ -d "$file" ]] #if directory
            then
        
                dir="$file"

            fi

            for i in $(find "$dir" -iname *.otf)
            do

                if [[ "$(file "$i")" == *"OpenType font data"* ]]
                then

                    mkdir -p ~/.fonts

                    cp "$i" ~/.fonts

                fi

            done

            for i in $(find "$dir" -iname *.ttf)
            do

                if [[ "$(file "$i")" == *"TrueType Font data"* ]]
                then

                    mkdir -p ~/.fonts

                    cp "$i" ~/.fonts

                fi

            done

        fi

    elif ((ex==2)) #remove
    then

        fonts=($(ls ~/.fonts))

        font_to_remove="$(yad --window-icon=preferences-desktop-font --title="Remove Fonts" --width=400 --height=300 --list --column="Name" --no-headers "${fonts[@]}" --button="Cancel"\!gtk-cancel:1 --button="Remove"\!remove:0)"

        detect_exit

        font_to_remove="${font_to_remove::-1}"

        rm ~/.fonts/"$font_to_remove"

    elif ((ex==4)) #next
    then

        if [[ "$font_to_change" == "Application Font|" ]]
        then

            new_font="$(yad --font --title="Application Font" --window-icon=preferences-desktop-font --fontname="$current_appfont" --button="Apply"\!gtk-ok --button="Cancel"\!gtk-cancel)"

            detect_exit

            dconf write /org/mate/desktop/interface/font-name "'$new_font'"

            current_appfont="$new_font"

        elif [[ "$font_to_change" == "Desktop Font|" ]]
        then

            new_font="$(yad --font --title="Desktop Font" --window-icon=preferences-desktop-font --fontname="$current_deskfont" --button="Apply"\!gtk-ok --button="Cancel"\!gtk-cancel)"

            detect_exit

            dconf write /org/mate/caja/desktop/font "'$new_font'"

            current_deskfont="$new_font"

        elif [[ "$font_to_change" == "Document Font|" ]]
        then

            new_font="$(yad --font --title="Document Font" --window-icon=preferences-desktop-font --fontname="$current_docfont" --button="Apply"\!gtk-ok --button="Cancel"\!gtk-cancel)"

            detect_exit

            dconf write /org/mate/desktop/interface/document-font-name "'$new_font'"

            current_docfont="$new_font"

        elif [[ "$font_to_change" == "Monospace Font|" ]]
        then

            new_font="$(yad --font --title="Monospace Font" --window-icon=preferences-desktop-font --fontname="$current_monospacefont" --button="Apply"\!gtk-ok --button="Cancel"\!gtk-cancel)"

            detect_exit

            dconf write /org/mate/desktop/interface/monospace-font-name "'$new_font'"

            current_monospacefont="$new_font"

        elif [[ "$font_to_change" == "Window Title Font|" ]]
        then

            new_font="$(yad --font --title="Window Title Font" --window-icon=preferences-desktop-font --fontname="$current_windowtitlefont" --button="Apply"\!gtk-ok --button="Cancel"\!gtk-cancel)"

            detect_exit

            dconf write /org/mate/marco/general/titlebar-font "'$new_font'"

            current_windowtitlefont="$new_font"

        elif [[ "$font_to_change" == "Reset All Fonts to Defaults|" ]]
        then

            yad --window-icon=preferences-desktop-font --title="Fonts" --text="Are you sure you would like to reset all fonts to their defaults?" --buttons-layout=spread --button="Yes"\!gtk-yes --button="No"\!gtk-cancel

            detect_exit

            dconf write /org/mate/desktop/interface/font-name "'Cantarell 11'"

            current_appfont="Cantarell 11"

            dconf write /org/mate/caja/desktop/font "'Cantarell 11'"

            current_deskfont="Cantarell 11"

            dconf write /org/mate/desktop/interface/document-font-name "'Cantarell 11'"

            current_docfont="Cantarell 11"

            dconf write /org/mate/desktop/interface/monospace-font-name "'Monospace 13'"

            current_monospacefont="Monospace 13"

            dconf write /org/mate/marco/general/titlebar-font "'Cantarell Bold 11'"

            current_windowtitlefont="Cantarell Bold 11"

        fi
    
        echo "current_appfont=\"$current_appfont\"

current_deskfont=\"$current_deskfont\"

current_docfont=\"$current_docfont\"

current_monospacefont=\"$current_monospacefont\"

current_windowtitlefont=\"$current_windowtitlefont\"" | tee ~/.config/shock/fonts

    else

        exit

    fi

done

