#!/bin/bash

IFS=$'\n'

#deamon that syncs the user themes with the /usr/share/themes directory to allow root apps to use user themes

#the root check element begins

if [[ "$(id -u)" != "0" ]]
then

    echo "Script must be run as root. Exiting..."

    exit

fi

#the root check element ends

for user in /home/*
do

    user="$(basename "$user")"

    for type in {themes,icons}
    do

        if (($(ls /home/"$user"/."$type" | wc -l)>0))
        then

            linked_themes=()

            for theme in /home/"$user"/."$type"/* #creates list of themes that already have a link
            do

                theme="$(basename "$theme")"

                if [[ -h /home/"$user"/."$type"/"$theme" ]]
                then

                    link="$(readlink /home/"$user"/."$type"/"$theme")"

                    if [[ -d "$link" ]]
                    then

                        linked_themes+=("\"$(basename "$link")\"")

                        if [[ "$theme" != "$user_"* ]] #if theme not named to fit user
                        then

                            mv /home/"$user"/."$type"/"$theme" /home/"$user"/."$type"/"${user}_${theme}"

                            theme="${user}_${theme}"

                        fi

                    else #remove symlink if target theme doesn't exist

                        rm /home/"$user"/."$type"/"$theme"

                    fi

                else #if file is not a symlink, move it to the .shock-(themes/icons) directory

                    mv /home/"$user"/."$type"/"$theme" /home/"$user"/.shock-"$type"

                fi

            done

        fi

        if (($(ls /home/"$user"/.shock-"$type" | wc -l)>0))
        then

            for theme in /home/"$user"/.shock-"$type"/* #create links to new themes.
            do

                theme="$(basename "$theme")"

                if [[ " ${linked_themes[@]} " != *"\"$theme\""* ]]
                then

                    ln -s /home/"$user"/.shock-"$type"/"$theme" /home/"$user"/."$type"/"${user}_${theme}"

                fi

            done

        fi

        if (($(ls /home/"$user"/."$type" | wc -l)>0))
        then

            for theme in /home/"$user"/."$type"/* #add new themes to their directories in /usr/share
            do

                theme="$(basename "$theme")"

                if [[ ! -d /usr/share/"$type"/"$theme" ]] 
                then

                    ln -s /home/"$user"/."$type"/"$theme" /usr/share/"$type"/"$theme"

                fi

            done

        fi

        for theme in $(ls /usr/share/"$type" | grep "${user}_") #remove links to themes that no longer exist
        do

            theme="$(basename "$theme")"

            if [[ ! -d /home/"$user"/."$type"/"$theme" ]] && [[ "$theme" != "${user}_shock_fallback_icon_theme" ]]
            then

                rm /usr/share/"$type"/"$theme"

            fi

        done

        if [[ -f /home/"$user"/.config/shock_themes ]] #sets the user's fallback icon theme
        then

            source /home/"$user"/.config/shock_themes

            if [[ "$(cat /home/"$user"/.config/shock_themes)" == "lod="* ]] #UPDATE COMPATIBILITY (9.0)
            then

                echo "shock_gtk_theme=shock-${lod}-${color}
shock_icon_theme=shock-${lod}-${color}" | tee /home/"$user"/.config/shock_themes

                source /home/"$user"/.config/shock_themes

            fi

            rm /usr/share/icons/"${user}_shock_fallback_icon_theme"

            ln -s /usr/share/icons/"${shock_icon_theme}" /usr/share/icons/"${user}_shock_fallback_icon_theme"

        fi

    done

done
