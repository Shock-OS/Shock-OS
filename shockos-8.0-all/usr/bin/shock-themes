#!/bin/bash

while true
do

	yadlist="start-here \"The default Shock OS look and feel\" Default"

	if (($(ls ~/.themes | wc -l)>0))
	then

		for i in ~/.themes/* #list all themes
		do

			yadlist+=" gnome-settings-theme \"Theme pack\" \"$(basename "$i")\" "

		done

	fi

	for i in ~/.icons/* #list all icons
	do

		if  [[ -d "$(find "$i" -name places | head -n1)" || -d "$(find "$i" -name status | head -n1)" ]] && [[ "$(cat "$i/index.theme")" == *"[Icon Theme]"* ]]
		then

			yadlist+=" folder-images \"Icon pack\" \"$(basename "$i")\" "

		fi

	done

	for i in ~/.icons/* #list all cursors
	do

		if  [[ -d "$(find "$i" -name cursors | head -n1)" ]] || [[ -f "$i/cursors.theme" ]]
		then

			yadlist+=" input-mouse \"Cursor pack\" \"$(basename "$i")\" "

		fi

	done

	yad="yad --window-icon=gnome-settings-theme --title=\"Themes\" --text=\"Install, remove, rename or use themes, icons and cursors.\" --list --column=\"Type\":IMG --column=ToolTip:HD --column=Name --tooltip-column=2 --always-print-result --search-column=3 --response=3 --height=300 --buttons-layout=spread --button=\"Install\"\!add --button=\"Remove\"\!remove --button=\"Rename\"\!gtk-edit --button=\"Use\"\!dialog-ok $(echo "$yadlist")"

    sleep 1

	output="$(eval $yad)"

	ex=$?

	name=$(echo $output | awk 'BEGIN {FS="|" } { print $3 }')

	type=$(echo $output | awk 'BEGIN {FS="|" } { print $2 }')

	if [[ "$ex" == "0" ]] #install
	then

		cd ~/

		file="$(yad --window-icon=gnome-settings-theme --title="Install" --text="Please select a theme, icon or cursor pack to install. You may select a folder or a compressed archive." --file --button="Install"\!document-open)"

		ex=$?

		if [[ "$ex" == "0" ]]
		then

            if [[ "$file" == *".deb" ]]
            then

                yad --window-icon=gnome-settings-theme --image=emblem-important --title="Install" --text="$file is not a compatible theme file. Please choose a folder or a compressed archive containing the theme you want to install." --button="Dismiss"

            else

                tmpdir=$(mktemp -d)

			    mkdir -p "$tmpdir"

			    cd "$tmpdir"

			    if [[ -f "$file" ]] #if archive, then extract archive
			    then

				    unp -f "$file"

			    else #if folder

				    cp -r "$file" .

			    fi

                found_dir="TRUE"

                itd="$(dirname "$(find "$tmpdir" -name index.theme | head -n1)")"

                mtd="$(dirname "$(find "$tmpdir" -name metacity* | head -n1)")"

                if [[ "$itd" != "." ]]
                then

                    cd "$itd"

                elif [[ -d "$mtd" ]]
                then

                    cd "$mtd"

                else

                    found_dir="FALSE"

                fi

                if [[ "$found_dir" == "TRUE" ]]
                then

                    cd ..

			        for i in *
			        do

				        if [[ -f "$i/index.theme" ]] || [[ -d "$(find "$i" -name metacity* | head -n1)" ]]
				        then

					        if [[ -d "$(find "$i" -name cursors | head -n1)" ]] || [[ -f "$i/cursors.theme" ]] || [[ "$(cat "$i/index.theme")" == *"[Icon Theme]"* ]]
					        then

						        directories=($(cat "$i/index.theme" | grep places | grep -oP "\[([^]]+)\]"))

						        directories+=($(cat "$i/index.theme" | grep status | grep -oP "\[([^]]+)\]"))

						        for a in "${directories[@]}"
						        do

							        if [[ "$a" == *"scalable"* ]]
							        then

								        cp -rf /usr/share/shock-themes/scalable/* "$i/${a:1:${#a}-2}"

							        elif [[ "$a" == *"symbolic"* ]]
							        then

								        cp -rf /usr/share/shock-themes/symbolic/* "$i/${a:1:${#a}-2}"

							        else

								        cp -rf "/usr/share/shock-themes/$(echo "$a" | grep -oE '[0-9]+' | head -n 1)"/* "$i/${a:1:${#a}-2}"

							        fi

						        done

                                mkdir -p ~/.icons

						        cp -r "$i" ~/.icons

					        fi

                            if [[ "$(cat "$i/index.theme")" == *"X-GNOME-Metatheme"* ]] || [[ -d "$(find "$i" -name metacity* | head -n1)" ]]
                            then

                                mkdir -p ~/.themes

                                cp -r "$i" ~/.themes

                            fi

				        fi

			        done

			        rm -r "$tmpdir"

                else

                    yad --window-icon=gnome-settings-theme --image=emblem-important --title="Install" --text="$file does not appear to contain any themes, icon packs or cursor packs." --button="Dismiss"

                fi

            fi

		fi

	elif [[ "$ex" == "1" ]] #remove
	then

		if [[ "$type" == "The default Shock OS look and feel" ]]
		then

			yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove the default theme." --button="Dismiss"

		elif [[ "$type" == "Theme pack" ]] #if theme pack
		then

            if [[ "$(dconf read /org/mate/desktop/interface/gtk-theme)" == "'$name'" ]] || [[ "$(dconf read /org/mate/marco/general/theme)" == "'$name'" ]]
            then

                yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove $name because it is currently in use. Please switch to a different theme before removing $name." --button="Dismiss"

            else

			    rm -r ~/.themes/"$name"

            fi

		else #if icon or cursor pack

            if [[ "$(dconf read /org/mate/desktop/interface/icon-theme)" == "'$name'" ]] || [[ "$(dconf write /org/mate/desktop/peripherals/mouse/cursor-theme)" == "'$name'" ]]
            then

                if [[ "$type" == "Icon pack" ]]
                then

                    yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove $name because it is currently in use. Please switch to a different icon theme before removing $name." --button-"Dismiss"

                else

                    yad --window-icon=gnome-settings-theme --title="Themes" --image=emblem-important --text="You cannot remove $name because it is currently in use. Please switch to a different cursor theme before removing $name." --button-"Dismiss"

                fi

            else

			    rm -r ~/.icons/"$name"

            fi

		fi

	elif [[ "$ex" == "2" ]] #rename
	then

        if [[ "$type" == "The default Shock OS look and feel" ]]
		then

            yad --window-icon=gnome-settings-theme --title="Rename" --image=emblem-important --text="You cannot rename the default theme." --button="Dismiss"

        else

		    success="no"

		    until [[ "$success" == "yes" ]]
		    do

			    newname="$(yad --window-icon=gnome-settings-theme --title="Rename" --text="Please enter the new name for your theme pack." --entry --entry-text="$name" --button="Rename")"

			    ex=$?

			    if [[ "$ex" == "0" ]]
			    then

				    success="yes"

				    if [[ "$type" == "Theme pack" ]] #if theme pack
				    then

					    if [[ -e ~/.themes/"$newname" ]] #if theme with that name already exists
					    then

						    yad --window-icon=gnome-settings-theme --image=emblem-important --title="Rename" --text="There is already a theme pack named '$newname'. Please choose a different name." --button="Retry"

						    success="no"

					    else

						    mv ~/.themes/"$name" ~/.themes/"$newname"

						    if [[ "$(dconf read /org/mate/desktop/interface/gtk-theme)" == "'$name'" ]] || [[ "$(dconf read /org/mate/marco/general/theme)" == "'$name'" ]]
						    then

							    dconf write /org/mate/desktop/interface/gtk-theme "'$newname'"

							    dconf write /org/mate/marco/general/theme "'$newname'"

						    fi

					    fi

				    else #if icon or cursor pack

					    if [[ -e ~/.icons/"$newname" ]] #if icon or cursor pack with that name already exists
					    then

						    yad --window-icon=gnome-settings-theme --image=emblem-important --title="Rename" --text="There is already an icon/cursor pack named '$newname'. Please choose a different name." --button="Retry"

						    success="no"

					    else

						    mv ~/.icons/"$name" ~/.icons/"$newname"

						    if [[ "$(dconf read /org/mate/desktop/interface/icon-theme)" == "'$name'" ]]
						    then

							    dconf write /org/mate/desktop/interface/icon-theme "'$newname'"

						    fi

						    if [[ "$(dconf write /org/mate/desktop/peripherals/mouse/cursor-theme)" == "'$name'" ]]
						    then

							    dconf write /org/mate/desktop/peripherals/mouse/cursor-theme "'$newname'"

						    fi

					    fi

				    fi

			    fi

		    done

        fi

	elif [[ "$ex" == "3" ]] #use
	then

		if [[ "$type" == "The default Shock OS look and feel" ]]
		then

			if ! [[ -f ~/.config/shock_themes ]]
			then

				touch ~/.config/shock_themes

				echo 'lod=light
color=blue' | tee ~/.config/shock_themes

			fi

			eval "$(cat ~/.config/shock_themes)"

			if [[ "$lod" == "light" ]]
			then

				theme_selection='^Light!Dark'

			elif [[ "$lod" == "dark" ]]
			then

				theme_selection='Light!^Dark'

			fi

			if [[ "$color" == "blue" ]]
			then

				color_selection='^Blue!Green!Orange!Pink!Purple!Red!Yellow'

			elif [[ "$color" == "green" ]]
			then

				color_selection='Blue!^Green!Orange!Pink!Purple!Red!Yellow'

			elif [[ "$color" == "orange" ]]
			then

				color_selection='Blue!Green!^Orange!Pink!Purple!Red!Yellow'

			elif [[ "$color" == "pink" ]]
			then

				color_selection='Blue!Green!Orange!^Pink!Purple!Red!Yellow'

			elif [[ "$color" == "purple" ]]
			then

				color_selection='Blue!Green!Orange!Pink!^Purple!Red!Yellow'

			elif [[ "$color" == "red" ]]
			then

				color_selection='Blue!Green!Orange!Pink!Purple!^Red!Yellow'

			elif [[ "$color" == "yellow" ]]
			then

				color_selection='Blue!Green!Orange!Pink!Purple!Red!^Yellow'

			fi

			output=$(yad --width=300 --window-icon=gnome-settings-theme --title="Themes" --form --field="Theme:":CB "$theme_selection" --field="Color:":CB "$color_selection" --button="Apply"\!gtk-ok)

			ex=$?

			if [[ "$ex" == "0" ]]
			then

				lod=$(echo "$output" | awk -F'|' '{print $1}')

				lod=$(echo "$lod" | awk '{print tolower($0)}') #this command makes all the letters lowercase

				color=$(echo "$output" | awk -F'|' '{print $2}')

				color=$(echo "$color" | awk '{print tolower($0)}') #this command makes all the letters lowercase

				theme="shock-$lod-$color"

				dconf write /org/mate/desktop/interface/gtk-theme "'$theme'"

				dconf write /org/mate/marco/general/theme "'$theme'"

				dconf write /org/mate/desktop/interface/icon-theme "'$theme'"

				dconf write /org/mate/desktop/peripherals/mouse/cursor-theme "'mate-black'"

				echo "[Greeter]
theme-name=shock-dark-$color
icon-theme-name=shock-dark-$color
show-hostname=false
show-power=false
show-keyboard=false
show-clock=false" > /etc/lightdm/slick-greeter.conf

				echo "lod=$lod
color=$color" | tee ~/.config/shock_themes

			fi

		elif [[ "$type" == "Theme pack" ]]
		then

			dconf write /org/mate/desktop/interface/gtk-theme "'$name'"

			dconf write /org/mate/marco/general/theme "'$name'"

		elif [[ "$type" == "Icon pack" ]]
		then

			dconf write /org/mate/desktop/interface/icon-theme "'$name'"

		elif [[ "$type" == "Cursor pack" ]]
		then

			dconf write /org/mate/desktop/peripherals/mouse/cursor-theme "'$name'"

		fi

	else

		exit

	fi

done












