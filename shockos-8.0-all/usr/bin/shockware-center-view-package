#!/bin/bash

type="$3"

full_name="$2"

#THE LOADING FUNCTIONS BEGIN

function start_loading() {

yad --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --progress-text="Loading app info..." --center --progress --pulsate --auto-close --undecorated --no-buttons --skip-taskbar & killpid=$!

}

function end_loading() {

kill -9 $killpid

}

#THE LOADING FUNCTIONS END

start_loading

#!/bin/bash

key="$RANDOM"

if [[ "$type" == "A" ]] #if APT package
then

    package="$4"

    apt_icon="$(find /var/lib/app-info/icons/*/64x64/"$package"_* | head -1)" #prefer 64x64 icons

    if [[ -z "$apt_icon" ]]
    then

        apt_icon="$(find /var/lib/app-info/icons/*/*/"$package"_* | head -1)"

    fi

	details="$(apt show $package)"

	installed_packages=($(apt list --installed | awk -F/ '{print $1}' | uniq)) #ChatGPT

	if [[ " ${installed_packages[@]} " == *" $package "* ]] #if installed
	then

		irbuttons='--button=Launch!mate-panel-launcher:3 --button=Remove!remove:4'

	else

		irbuttons='--button=Install!add:5'

	fi

	description="$(echo "$details" | grep -A10 Description:)"

    version="$(echo "$details" | grep Version:)"

    size="$(echo "$details" | grep Size:)"

	tmpfile="$(mktemp)"

	echo "$description

$version

$size" | tee "$tmpfile"

	end_loading

	yad --window-icon=/usr/share/shockware-center/icon.svg --title="Details of $full_name" --text="APT package" --width=400 --height=300 --image="$apt_icon" --text-info --filename="$tmpfile" $irbuttons

	ex=$?

	rm "$tmpfile"

	if [[ "$ex" == "3" ]] #launch
	then

		$package &

	elif [[ "$ex" == "4" ]] #remove
	then

		yad --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --text="Are you sure you would like to remove $full_name?" --button="Yes, remove" --button="No, keep"

		ex=$?

		if [[ "$ex" == "0" ]]
		then

			pkexec apt remove -y $package | yad --skip-taskbar --no-buttons --no-focus --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --progress-text="Removing $full_name..." --auto-close --progress --pulsate

		fi

	elif [[ "$ex" == "5" ]] #install
	then

		pkexec apt install -y $package | yad --skip-taskbar --no-buttons --no-focus --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --progress-text="Installing $full_name..." --auto-close --progress --pulsate

        if [[ "$(apt show $package)" == *"Installed: yes"* ]] #if installed successfully
        then

            yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-default --title="Shockware Center" --text="$full_name was successfully installed." --button="Dismiss"

        else
    
            yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="Failed to install $full_name. Please double check your internet connection and try again later." --button="Dismiss"

        fi

	fi

elif [[ "$type" == "F" ]] #if Flatpak
then

	icon="$4"

	id="$(basename "$4")"

	id="${id::-4}"

	installed_flatpaks=($(flatpak list --columns=app | uniq)) #ChatGPT

	if [[ " ${installed_flatpaks[@]} " == *" $id "* ]] #if installed
	then

		irbuttons='--button=Launch!mate-panel-launcher:3 --button=Remove!remove:4'

	else

		irbuttons='--button=Install!add:5'

	fi

	description=$(grep -A 10 "<id>$id</id>" /var/lib/flatpak/appstream/flathub/$(uname -m)/active/appstream.xml | grep "<description>" | sed -e 's/<[^>]*>//g' -e 's/^[[:space:]]*//')

	tmpfile="$(mktemp)"

	echo "Description: $description" | tee "$tmpfile"

	end_loading

	yad --window-icon=/usr/share/shockware-center/icon.svg --title="Details of $full_name" --text="Flatpak application" --width=400 --height=300 --image="$icon" --text-info --filename="$tmpfile" $irbuttons

	ex=$?

	rm "$tmpfile"

	if [[ "$ex" == "3" ]] #launch
	then

		flatpak run "$id" &

	elif [[ "$ex" == "4" ]] #remove
	then

		yad --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --text="Are you sure you would like to remove $full_name?" --button="Yes, remove" --button="No, keep"

		ex=$?

		if [[ "$ex" == "0" ]]
		then

			flaptak uninstall -y "$id" | yad --skip-taskbar --no-buttons --no-focus --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --progress-text="Removing $full_name..." --auto-close --progress --pulsate

		fi

	elif [[ "$ex" == "5" ]] #install
	then

		flatpak install -y "$id" | yad --skip-taskbar --no-buttons --no-focus --no-escape --fixed --width=400 --window-icon=/usr/share/shockware-center/icon.svg --title="Shockware Center" --progress-text="Installing $full_name..." --auto-close --progress --pulsate

        installed_flatpaks=($(flatpak list --columns=app | uniq)) #ChatGPT

        if [[ " ${installed_flatpaks[@]} " == *" $id "* ]] #if installed successfully
	    then

            yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-default --title="Shockware Center" --text="$full_name was successfully installed." --button="Dismiss"

        else

            yad --window-icon=/usr/share/shockware-center/icon.svg --image=emblem-important --title="Shockware Center" --text="Failed to install $full_name. Please double check your internet connection and try again later." --button="Dismiss"

        fi

	fi

else #if both

    package="$5"

    apt_icon="$(find /var/lib/app-info/icons/*/64x64/"$package"_* | head -1)" #prefer 64x64 icons

    if [[ -z "$apt_icon" ]]
    then

        apt_icon="$(find /var/lib/app-info/icons/*/*/"$package"_* | head -1)"

    fi

    details="$(apt show $package)"

	installed_packages=($(apt list --installed | awk -F/ '{print $1}' | uniq)) #ChatGPT

	if [[ " ${installed_packages[@]} " == *" $package "* ]] #if installed
	then

		irbuttons='--button=Launch!mate-panel-launcher:3 --button=Remove!remove:4'

	else

		irbuttons='--button=Install!add:5'

	fi

	description="$(echo "$details" | grep -A10 Description:)"

	version="$(echo "$details" | grep Version:)"

	size="$(echo "$details" | grep Size:)"

	tmpfile="$(mktemp)"

	echo "$description

$version

$size" | tee "$tmpfile"

    yad --plug=$key --tabnum=1 --image="$apt_icon" --text-info --filename="$tmpfile" $irbuttons &

    icon="$4"

	id="$(basename "$4")"

	id="${id::-4}"

	installed_flatpaks=($(flatpak list --columns=app | uniq)) #ChatGPT

	if [[ " ${installed_flatpaks[@]} " == *" $id "* ]] #if installed
	then

		irbuttons='--button=Launch!mate-panel-launcher:3 --button=Remove!remove:4'

	else

		irbuttons='--button=Install!add:5'

	fi

	description=$(grep -A 10 "<id>$id</id>" /var/lib/flatpak/appstream/flathub/$(uname -m)/active/appstream.xml | grep "<description>" | sed -e 's/<[^>]*>//g' -e 's/^[[:space:]]*//')

	tmpfile="$(mktemp)"

	echo "Description: $description" | tee "$tmpfile"

    yad --plug=$key --tabnum=2 --image="$icon" --text-info --filename="$tmpfile" $irbuttons &

    end_loading

    yad --window-icon=/usr/share/shockware-center/icon.svg --title="Details of $full_name" --text="$full_name is available from both APT and Flatpak." --width=400 --height=300 --notebook --key=$key --tab="APT" --tab="Flatpak"

fi

    

	

