#!/bin/bash

if (($(ps aux | awk '{print $1,$11,$12}' | grep -c "$(whoami) /bin/bash /usr/bin/shock-update-manager")>2)) #exits the program if it is already running for this user
then

    wmctrl -Fa "Update Manager"

    exit

fi

IFS=$'\n'

automatic_updates=""

notify_of_new_versions_of_shock_os=""

#THE SETTINGS FUNCTION BEGINS

function settings() {

if [[ -f /etc/sudoers.d/shock_automatic_updates ]] #if automatic updates are enabled
then

    automatic_updates="TRUE"

else #if disabled

    automatic_updates="FALSE"

fi

if [[ ! -f /usr/share/shock-update-manager/disable-release-upgrader-indicator ]] #if notification of new versions of Shock OS is enabled
then

    notify_of_new_versions_of_shock_os="TRUE"

else #if disabled

    notify_of_new_versions_of_shock_os="FALSE"

fi

if [[ -f /usr/share/shock-update-manager/update-scan-interval ]]
then

    interval=$(cat /usr/share/shock-update-manager/update-scan-interval)

else

    interval=1440 #24 hours

fi

hours=$((interval/60))

if ((hours>0))
then

    minutes=$((interval%60))

else

    minutes=$interval

fi

success="FALSE"

until [[ "$success" == "TRUE" ]]
do

    output="$(yad --window-icon=software-update-available --width=100 --title="Settings" --form --field="Delay between each scan for updates:":LBL "" --field="Hours:":NUM "${hours}\!0..96" --field="Minutes:":NUM "${minutes}\!0..59" --field="":LBL "" --field="If enabled, automatic updates will as root on a daily basis. You cannot log out, shutdown, or restart the system while automatic updates are being applied.":LBL "" --field="Automatic updates":CHK "$automatic_updates" --field="":LBL "" --field="If enabled, you will be notified when an upgrade to a new version of Shock OS is available.":LBL "" --field="Notify me of new versions of Shock OS":CHK "$notify_of_new_versions_of_shock_os" --buttons-layout=edge --button="Cancel"\!gtk-cancel:1 --button="Apply"\!gtk-ok:0)"

    ex=$?

    if ((ex==0))
    then

        hours="$(echo "$output" | awk 'BEGIN {FS="|" } { print $2 }')"

        minutes="$(echo "$output" | awk 'BEGIN {FS="|" } { print $3 }')"

        automatic_updates="$(echo "$output" | awk 'BEGIN {FS="|" } { print $6 }')"

        notify_of_new_versions_of_shock_os="$(echo "$output" | awk 'BEGIN {FS="|" } { print $9 }')"

        minutes=$((hours*60+minutes))

        if ((minutes<5))
        then

            yad --window-icon=emblem-important --title="Update Manager" --text="The delay between each scan for updates must be a minimum of five minutes." --button="Retry"\!edit-undo

        else    

            pkexec shock-update-manager-pkexec-settings-script "$automatic_updates" "$notify_of_new_versions_of_shock_os" "$minutes"

            success="TRUE"

        fi

    else

        success="TRUE"

    fi

done

}

#THE SETTINGS FUNCTION ENDS

function wait_apt_lock() {

mkdir -p ~/.cache/shock-tmp/shockware-center

until (($(lslocks | grep -c apt)==0)) && [[ ! -f ~/.cache/shock-tmp/shockware-center/apt-queue ]] #waits until /var/lib/dpkg/lock-frontend is not being held
do

    echo "#Waiting for APT lock..."

    sleep 3

done

echo "#"

}

function install_updates() {

gsettings set org.mate.lockdown disable-log-out "true" #stops the user from accessing the shutdown menu while updates are being applied.

kill "$(cat ~/.cache/shock-tmp/shock-update-manager/indicator_pid)"

rm ~/.cache/shock-tmp/shock-update-manager/indicator_pid

if ((all_updates_num>1))
then

    yad_text="Updates are being installed. Please do not turn off your computer."

else

    yad_text="An update is being installed. Please do not turn off your computer."

fi

yad --notification --image=software-update-available --text="$yad_text" --command='' & notification_killpid=$!

mkdir -p ~/.cache/shock-tmp/shock-update-manager

echo "$notification_killpid" | tee ~/.cache/shock-tmp/shock-update-manager/updates_in_progress_indicator_pid

if [[ " ${all_updates[@]} " == *" /usr/share/shock-update-manager/apt.svg "* ]] #if APT updates are available
then

    { wait_apt_lock; pkexec env DEBIAN_FRONTEND=gnome apt-get upgrade --show-progress -y | stdbuf -o0 grep 'Progress:' | stdbuf -o0 grep -oP '\d+(?=%)' | (echo "#Downloading updates, please wait..."; stdbuf -o0 sed 's/.*/&\n#&%/g') ;} | yad --window-icon=software-update-available --image=software-update-available --width=400 --title="Update Manager" --text="Installing APT Updates...
<small>Updates will continue in the background if this window is closed.</small>" --text-align=center --fixed --progress --auto-close --no-cancel  --no-buttons --no-esape

fi

if [[ " ${all_updates[@]} " == *" /usr/share/shock-update-manager/flatpak.svg "* ]] #if Flatpak updates are available
then

    flatpak update -y | stdbuf -o0 grep 'Installing' | while read progress
    do

        current_progress="$(echo "$progress" | grep -oP '\d+(?=%)')"

        flatpak_counter="$(echo "$progress" | grep -oE "[0-9]+/[0-9]+")"

        current_flatpak="${flatpak_counter%%/*}"

        total_flatpaks="${flatpak_counter#*/}"

        if (($(echo "$flatpak_counter" | wc -l)==1))
        then

            if [[ -z "$flatpak_counter" ]]
            then

                percentage="$current_progress"

            else

                percentage=$(($(($((current_flatpak-1))*100/total_flatpaks))+$((current_progress/total_flatpaks))))

            fi

            echo "${percentage}n"

            echo "#${percentage}%"

        fi

    done | yad --window-icon=software-update-available --image=software-update-available --width=400 --title="Update Manager" --text="Installing Flatpak Updates...
<small>Updates will continue in the background if this window is closed.</small>" --text-align=center --fixed --progress --auto-close --no-cancel  --no-buttons --no-esape

fi

rm ~/.cache/shock-tmp/shock-update-manager/updates_in_progress_indicator_pid

kill "$notification_killpid"

gsettings set org.mate.lockdown disable-log-out "false" #allows the user to access the shutdown menu.

}

function fetch_cache() {

all_updates=($(cat /usr/share/shock-update-manager/cache))

all_updates_num=$(("${#all_updates[@]}"/2))

}

fetch_cache

if ((all_updates_num==0))
then

    kill "$(cat ~/.cache/shock-tmp/shock-update-manager/indicator_pid)"

    rm ~/.cache/shock-tmp/shock-update-manager/indicator_pid

    yad --window-icon=emblem-default --image=emblem-default --buttons-layout=edge --title="Update Manager" --text="Your system is up to date." --button="Settings"\!tweaks-app --button="Dismiss"\!gtk-cancel --width=300

    ex=$?

    if ((ex==0)) #settings
    then

        settings

    fi

    exit

elif ((all_updates_num==1))
then

    window_text="1 update is available."

else

    window_text="$all_updates_num updates are available."

fi

page=0

while true
do

    yad --window-icon=software-update-available --title="Update Manager" --width=800 --height=500 --text="$window_text" --list --no-click --dclick-action="" --buttons-layout=edge --column="Type":IMG --column="Name" $page_buttons --button="Settings"\!tweaks-app:1 --button="Install Updates"\!software-update-available:2 "${all_updates[@]}"

    ex=$?

    if ((ex==1)) #settings
    then

        settings

    elif ((ex==2)) #install updates
    then

        install_updates

        yad --window-icon=software-update-available --title="Update Manager" --progress-text="Refreshing cache..." --center --progress --pulsate --auto-close --undecorated --no-buttons --skip-taskbar & refresh_killpid=$!

        sudo shock-update-manager-refresh

        fetch_cache

        kill -9 $refresh_killpid

        if ((all_updates_num>0)) #if there are STILL updates available (updates likely failed or were interrupted)
        then

	        yad --window-icon=software-update-available --image=emblem-important --text="Failed to install the updates. Please double check your internet connection and try again later." --button="Dismiss"\!gtk-close

        else

            kill "$(cat ~/.cache/shock-tmp/shock-update-manager/indicator_pid)"

            rm ~/.cache/shock-tmp/shock-update-manager/indicator_pid

	        notify-send --icon=software-update-available --app-name="Update Manager" "Update Manager" "Your system is up to date."

        fi

        exit

    else

        exit

    fi

done







