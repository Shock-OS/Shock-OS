#!/bin/bash

IFS=$'\n'

#this script checks for available updates and sends a notification if any are available

while true
do

    rm ~/.cache/shock-update-manager/indicator_pid

    sudo shock-update-manager-refresh

    updates=$(cat /usr/share/shock-update-manager/cache | wc -l)

    updates=$((updates/2)) #divides updates array by two because there are two columns (Name and Type) for each updates

    if ((updates>0))
    then

        if [[ -f /etc/sudoers.d/shock_automatic_updates ]] #if automatic updates are enabled
        then

            if (($(ps aux | awk '{print $1,$11,$12}' | grep -c "root /bin/bash /usr/bin/shock-auto-updates")<=2)) #installs automatic updates if they aren't already running
            then

                gsettings set org.mate.lockdown disable-log-out "true" #stops the user from accessing the shutdown menu while automatic updates are being applied.

                sudo shock-auto-updates & auto_updates_killpid=$!

            else

                auto_updates_killpid="$(ps aux | grep "root" | grep "/usr/bin/shock-auto-updates" | awk '{print $2}')"

            fi

            yad --notification --image=aptdaemon-upgrade --icon-size=48 --text="Automatic updates are being installed. Please do not turn off your computer." --command="" & killpid=$!

            wait $auto_updates_killpid

            kill $killpid

            gsettings set org.mate.lockdown disable-log-out "false" #allows the user to access the shutdown menu.

        else

            if (($updates>1))
            then

                yad_text="$updates updates are available. Click to install them."

                notification_text="$updates updates are available."

            else

                yad_text="An update is available. Click to install it."

                notification_text="An update is available."

            fi

            notify-send --app-name="Update Manager" --icon=software-update-available "Update Manager" "$notification_text"

            yad --notification --image=software-update-available --text="$yad_text" --command='shock-update-manager' & killpid=$!

            mkdir -p ~/.cache/shock-tmp/shock-update-manager

            echo "$killpid" | tee ~/.cache/shock-tmp/shock-update-manager/indicator_pid

            wait $killpid

            if [[ -f ~/.cache/shock-tmp/shock-update-manager/updates_in_progress_indicator_pid ]] #if updates are being installed, wait for them to finish.
            then

                wait "$(cat ~/.cache/shock-tmp/shock-update-manager/updates_in_progress_indicator_pid)"

            fi

        fi

    fi

    shock-ss-sleep-update-scan-interval

done
