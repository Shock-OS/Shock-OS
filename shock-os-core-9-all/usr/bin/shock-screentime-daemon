#!/bin/bash

#the root check element begins

if (($(id -u)!=0))
then

    echo "Script must be run as root. Exiting..."

    exit

fi

#the root check element ends

IFS=$'\n'

#THE VIEW CURRENT USER FUNCTION BEGINS

#this function outputs the user that is using the currently active desktop session

function view-current-user() {

for i in $(loginctl --no-legend list-sessions)
do
    session="$(echo "$i" | awk '{print $1}')"

    session_info="$(loginctl show-session "$session")"

    session_info="${session_info// /}" #removes all spaces to satisfy the eval command

    eval "$session_info"

    if [[ "$Active" == "yes" ]] && [[ "$Type" == "x11" || "$Type" == "wayland" ]] && [[ -d /home/"$Name" ]]
    then

        echo "$Name"

    fi

done

}

#THE VIEW CURRENT USER FUNCTION ENDS

#THE REMOVE OLD TRACK DAYS FUNCTION BEGINS

function remove-old-track-days() {

for user in /usr/share/shock-screentime/*
do

    user="$(basename "$user")"

    screentime_track_days=60

    if [[ " $(groups "$user") " == *"shock-child"* ]]
    then

        source /usr/share/shock-screentime/"$user"/screentime-track-days

    else

        source /home/"$user"/.config/shock/screentime-track-days

    fi

    for date in $(ls -t /usr/share/shock-screentime/"$user"/dates | tail -n +"${screentime_track_days}") 
    do

        chattr -i "$date"

        rm "$date"

    done

done

}

#THE REMOVE OLD TRACK DAYS FUNCTION ENDS

sudo ntpdate -u pool.ntp.org

while true
do

    sleep 60

    {

    child_users="$(getent group shock-child)"

    child_users="${child_users##*:}"

    child_users="${child_users//,/\\n}"

    child_users=($(echo -e "$child_users"))

    current_user="$(view-current-user)"

    current_date="$(date +%F)"

    if [[ " ${child_users[@]} " == *" $current_user "* ]] #detect if active user is a child profile
    then

        child_account="TRUE"

    fi

    if [[ "$child_account" == "TRUE" && -f /usr/share/shock-screentime/"$current_user"/track-screentime ]] || [[ -f /home/"$current_user"/.config/shock/track-screentime ]] #if screen time tracking is enabled for current user
    then

        mkdir -p /usr/share/shock-screentime/"$current_user"/dates

        if [[ -f /usr/share/shock-screentime/"$current_user"/dates/"$current_date" ]]
        then

            current_usage=$(cat /usr/share/shock-screentime/"$current_user"/dates/"$current_date")

        elif [[ -f /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date" ]]
        then

            current_usage=$(cat /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date")

        else

            current_usage=0

        fi

        current_usage=$((current_usage+1))

        if [[ "$child_account" == "TRUE" ]]
        then

            chattr -i /usr/share/shock-screentime/"$current_user"/dates/"$current_date"

        fi

        echo "$current_usage" | tee /usr/share/shock-screentime/"$current_user"/dates/"$current_date" #the screen time usage for today has been updated

        if [[ "$child_account" == "TRUE" ]]
        then

            chattr +i /usr/share/shock-screentime/"$current_user"/dates/"$current_date"

        fi

        screentime_track_days=60

        if [[ "$child_user" == "TRUE" ]]
        then

            source /usr/share/shock-screentime/"$current_user"/screentime-track-days

        else

            source /home/"$current_user"/.config/shock/screentime-track-days

        fi

        for date in $(ls -t /usr/share/shock-screentime/"$current_user"/dates | tail -n +"${screentime_track_days}") 
        do

            chattr -i "$date"

            rm "$date"

        done

    else #if user has screen time disabled

        if [[ "$child_account" == "TRUE" ]]
        then

            chattr -R -i /usr/share/shock-screentime/"$current_user"/dates

        fi

        rm -r /usr/share/shock-screentime/"$current_user"/dates

    fi

    if [[ "$child_account" == "TRUE" ]] && [[ -f /usr/share/shock-screentime/"$current_user"/dailylimit ]] #manages dailylimit if current user is a child profile and has a daily limit
    then

        dailylimit=$(cat /usr/share/shock-screentime/"$current_user"/dailylimit)

        mkdir -p /usr/share/shock-screentime/"$current_user"/today-limit

        if [[ -f /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date" ]]
        then

            current_usage=$(cat /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date")

        else

            chattr -i /usr/share/shock-screentime/"$current_user"/today-limit/*
    
            rm /usr/share/shock-screentime/"$current_user"/today-limit/*

            current_usage=0

        fi

        current_usage=$((current_usage+1))

        if ((current_usage<=dailylimit))
        then

            chattr -i /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date"

            echo "$current_usage" | tee /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date"

            chattr +i /usr/share/shock-screentime/"$current_user"/today-limit/"$current_date"

        else

            killall -15 -u "$current_user"

            killall -9 -u "$current_user"

        fi

    elif [[ "$child_account" == "TRUE" ]] && [[ ! -f /usr/share/shock-screentime/"$current_user"/dailylimit ]] && [[ -f /home/"$current_user"/.cache/shock-tmp/screentime-limit-notification ]] #if the screen time limit was removed recently
    then

        kill $(cat /home/"$current_user"/.cache/shock-tmp/screentime-limit-notification)

        rm /home/"$current_user"/.cache/shock-tmp/screentime-limit-notification

    fi

    } &

done

