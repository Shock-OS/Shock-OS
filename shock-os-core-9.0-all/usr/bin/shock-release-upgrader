#!/bin/bash

#the root check element begins

if (($(id -u)!=0))
then

    echo "Script must be run as root. Exiting..."

    exit

elif [[ -f /usr/share/shock-os-update-manager/disable-release-upgrader-indicator ]]
then

    zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Upgrading is Disabled" --text="Checking for and upgrading to new releases of Shock OS is currently disabled. To re-enable this functionality, go to the Update Manager -> Settings, check the box that says 'Notify me of new versions of Shock OS', and try again later." --ok-label="Exit"

    exit

fi

#the root check element ends

current_version="$(apt show shock-os-metapackage | grep Version: | awk '{print $2}')"

if [[ "$current_version" == *"."* ]]
then

    current_version="${current_version%%.*}"

fi

rm /usr/share/shock-release-upgrader/codenames

wget --timeout 5 https://raw.githubusercontent.com/Shock-OS/Shock-OS/upgrades/codenames -P /usr/share/shock-release-upgrader

if  [[ ! -f /usr/share/shock-release-upgrader/codenames ]]
then

    echo "An internet connection is required. Exiting..."

    zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="No Internet" --text="An internet connection is required to upgrade. Please verify that your internet connection is stable and reliable and try again later." --ok-label="Dismiss"

    exit 1

fi

latest_version="$(cat /usr/share/shock-release-upgrader/codenames | wc -l)"

if ((latest_version>current_version))
then

    upgrto_version=$((current_version+1))

    upgrto_version_codename="$(sed -n "$upgrto_version"p /usr/share/shock-release-upgrader/codenames)"

    if ((upgrto_version<10))
    then

	    upgrto_version_display_name="$upgrto_version.0"

    else

	    upgrto_version_display_name="$upgrto_version"

    fi

    zenity --question --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Prepare to Upgrade" --text="Before upgrading, please make sure of the following:

1. The system is connected to a constant power supply.

2. The internet connection is stable and reliable.

3. No APT packages are being installed, removed or upgraded. If the Shockware Center or the Update Manager is running, please wait for it to finish and then close it out before continuing.

NOTE: The logout and power options in the start menu will be temporarily disabled while upgrading because powering off the machine during the upgrade process is highly discouraged and may render your system unusable.

Please press 'Continue' when you are ready to go on." --width=500 --ok-label="Upgrade to Shock OS $upgrto_version_display_name $upgrto_version_codename" --cancel-label="Cancel"

    ex=$?

    if ((ex!=0))
    then

        exit

    fi

    mkdir -p /usr/share/shock-release-upgrader/upgrades

    rm -rf /usr/share/shock-release-upgrader/upgrades/*

    { wget https://sourceforge.net/projects/shock-os-download-mirror/files/Upgrade-Packages/shock-release-upgrader/"$upgrto_version.zip" -P /usr/share/shock-release-upgrader/upgrades 2>&1 || { zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Download Failed" --text="Failed to download the upgrade pack. The upgrade has been cancelled." --ok-label="Exit"; kill $$; }; } | sed -u 's/.* \([0-9]\+%\)\ \+\([0-9.]\+.\) \(.*\)/\1\n# Downloading at \2\/s, ETA \3/' | yad --window-icon=/usr/share/shock-release-upgrader/icon.svg --progress --title="Downloading the Upgrade Pack" --width=310 --text="Downloading the Shock OS $upgrto_version_display_name $upgrto_version_codename upgrade pack. This may take a while..." --progress --width=300 --height=100 --center --fixed --auto-close --auto-kill --button="Cancel Upgrade"\!gtk-cancel:1

    cd /usr/share/shock-release-upgrader/upgrades

#THE VERIFICATION SEGMENT BEGINS

    # Launch the command in the background and capture its PID
    {

    mkdir -p /usr/share/shock-release-upgrader/verify || { zenity --error --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Could Not Refresh Cache" --text="The directory /usr/share/shock-release-upgrader/verify does not exist and could not be created." --ok-label="Exit"; exit 1; }

    rm -rf /usr/share/shock-release-upgrader/verify/* || { zenity --error --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Could Not Refresh Cache" --text="Failed to remove files from /usr/share/shock-release-upgrader/verify." --ok-label="Exit"; exit 1; }

    wget https://sourceforge.net/projects/shock-os-download-mirror/files/Upgrade-Packages/shock-release-upgrader/shockos.asc -P /usr/share/shock-release-upgrader/verify || { zenity --error --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Failed to Verify Image" --text="Failed to download the GPG key to verify the image." --ok-label="Exit"; exit 1; }

    gpg --import /usr/share/shock-release-upgrader/verify/shockos.asc || { zenity --error --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Failed to Import Key" --text="Failed to import the GPG key to verify the image." --ok-label="Exit"; exit 1; }

    wget https://sourceforge.net/projects/shock-os-download-mirror/files/Upgrade-Packages/shock-release-upgrader/"$upgrto_version".zip.sig -P /usr/share/shock-release-upgrader/verify || { zenity --error --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Failed to Fetch Signature" --text="Failed to fetch the signature to verify the image." --ok-label="Exit"; exit 1; }

    if [[ "$(gpg --verify /usr/share/shock-release-upgrader/verify/"$upgrto_version".zip.sig /usr/share/shock-release-upgrader/upgrades/"$upgrto_version".zip 2>&1 | grep 'Primary key fingerprint:')" != "Primary key fingerprint: 9515 D970 4C1B 1B3B 58CB  606D D2EA 4E12 F633 2179" ]]
    then

        zenity --error --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Invalid Upgrade Pack" --text="The upgrade pack has been tampered with during or after it was downloaded. Please double check your computer and your internet router for viruses and malware." --ok-label="Exit"

        exit 1

    fi

    } > /dev/null 2>&1 & command_pid=$!

    # Show the progress window using YAD

    yad --window-icon=/usr/share/shock-release-upgrader/icon.svg --title="Verifying" --text="Verifying the upgrade pack..." --progress --pulsate --progress-text="" --width=300 --height=100 --button="Cancel"\!gtk-cancel:1 & yad_pid=$!

    # Wait for either the command to finish or the YAD window to close
    wait -n $command_pid $yad_pid

    # Get the command's exit code
    ex=$?

     # Close the YAD progress window (if the command finished), or kill the command (if the YAD window was closed)
    if ps -p $command_pid
    then

        kill $command_pid

    else

        kill $yad_pid

    fi

    # Check if the command exited with a non-zero code and show an error message if needed
    if ((ex!=0))
    then

        zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Verification Cancelled" --text="The upgrade has been cancelled." --ok-label="Exit"

        kill $$

    fi

#THE VERIFICATION SEGMENT ENDS

#THE UNP SEGMENT BEGINS

    # Launch the command in the background and capture its PID
    unp -f "$upgrto_version.zip" > /dev/null 2>&1 & command_pid=$!

    # Show the progress window using YAD

    yad --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Unpacking the Upgrade Pack" --text="Unpacking the Shock OS $upgrto_version_display_name $upgrto_version_codename upgrade pack. This may take a while..." --progress --pulsate --progress-text="" --width=300 --height=100 --center --fixed --button="Cancel Upgrade"\!gtk-cancel:1 & yad_pid=$!

    # Wait for either the command to finish or the YAD window to close
    wait -n $command_pid $yad_pid

    # Get the command's exit code
    ex=$?

    # Close the YAD progress window (if the command finished), or kill the command (if the YAD window was closed)
    if ps -p $command_pid
    then

        kill $command_pid

    else

        kill $yad_pid

    fi

    # Check if the command exited with a non-zero code and show an error message if needed
    if ((ex!=0))
    then

        zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Failed to Unpack" --text="Failed to unpack the upgrade pack. The upgrade has been cancelled." --ok-label="Exit"

        kill $$

    fi

#THE UNP SEGMENT ENDS

    chmod --recursive 755 $upgrto_version/DEBIAN

#THE DPKG-DEB SEGMENT BEGINS

    # Launch the command in the background and capture its PID
    dpkg-deb --build -Zxz "$upgrto_version" > /dev/null 2>&1 & command_pid=$!

    # Show the progress window using YAD

    yad --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Preparing to Upgrade..." --text="Preparing to upgrade to Shock OS $upgrto_version_display_name $upgrto_version_codename. Please sit tight, this may take a while..." --progress --pulsate --progress-text="" --width=300 --height=100 --center --fixed --button="Cancel Upgrade"\!gtk-cancel:1 & yad_pid=$!

    # Wait for either the command to finish or the YAD window to close
    wait -n $command_pid $yad_pid

    # Get the command's exit code
    ex=$?

    # Close the YAD progress window (if the command finished), or kill the command (if the YAD window was closed)
    if ps -p $command_pid
    then

        kill $command_pid

    else

        kill $yad_pid

    fi

    # Check if the command exited with a non-zero code and show an error message if needed
    if ((ex!=0))
    then

        zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Failed to Upgrade" --text="Failed to package the upgrade. The upgrade has been cancelled." --ok-label="Exit"

        kill $$

    fi

#THE DPKG-DEB SEGMENT ENDS

    if [[ -f /usr/share/shock-release-upgrader/upgrades/preupgr ]]
    then

        chmod +x /usr/share/shock-release-upgrader/upgrades/preupgr

        sudo /usr/share/shock-release-upgrader/upgrades/preupgr

    fi

#THE APT INSTALL SEGMENT BEGINS

    # Launch the command in the background and capture its PID
    sudo env DEBIAN_FRONTEND=gnome apt install -y ./"$upgrto_version.deb" > /dev/null 2>&1 & command_pid=$!

    # Show the progress window using YAD

    yad --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Upgrading to Shock OS $upgrto_version_display_name $upgrto_version_codename" --text="Upgrading to Shock OS $upgrto_version_display_name $upgrto_version_codename. Please sit tight, this may take a while..." --progress --pulsate --progress-text="" --width=300 --height=100 --center --fixed --button="Cancel Upgrade"\!gtk-cancel:1 & yad_pid=$!

    # Wait for either the command to finish or the YAD window to close
    wait -n $command_pid $yad_pid

    # Get the command's exit code
    ex=$?

    # Close the YAD progress window (if the command finished), or kill the command (if the YAD window was closed)
    if ps -p $command_pid
    then

        kill $command_pid

    else

        kill $yad_pid

    fi

    # Check if the command exited with a non-zero code and show an error message if needed
    if ((ex!=0))
    then

        zenity --error --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Failed to Upgrade" --text="Failed to install the upgrade pack. The upgrade has been cancelled." --ok-label="Exit"

        kill $$

    fi

#THE APT INSTALL SEGMENT ENDS

    if [[ -f /usr/share/shock-release-upgrader/upgrades/postupgr ]]
    then

        chmod +x /usr/share/shock-release-upgrader/upgrades/postupgr

        sudo /usr/share/shock-release-upgrader/upgrades/postupgr

    fi

    yad --window-icon=/usr/share/shock/shock-release-upgrader.svg --title="Refreshing..." --progress-text="Refreshing..." --center --progress --pulsate --undecorated --no-buttons --skip-taskbar & killpid=$!

    rm -rf /usr/share/shock-release-upgrader/upgrades/* #cleans the system of the no-longer-needed upgrade files

    current_version="$(apt show shock-os-metapackage | grep Version: | awk '{print $2}')"

    if [[ "$current_version" == *"."* ]]
    then

        current_version="${current_version%%.*}"

    fi

    kill -9 $killpid

    if ((current_version==upgrto_version))
    then

	    yad --window-icon=/usr/share/shock/shock-release-upgrader.svg --image=emblem-default --title="Upgrade Complete" --text="Successfully upgraded to Shock OS $upgrto_version_display_name $upgrto_version_codename. Please reboot for all changes to take full effect." --button="Reboot Later" --button="Reboot Now"

	    ex=$?

	    if ((ex==1))
	    then

		    sudo reboot

	    fi

    else

	    yad --window-icon=/usr/share/shock/shock-release-upgrader.svg --image=emblem-important --title="Upgrade Failed" --text="Failed to upgrade to Shock OS $upgrto_version_display_name $upgrto_version_codename. Please try again later." --button="Dismiss"\!gtk-cancel

    fi

fi

