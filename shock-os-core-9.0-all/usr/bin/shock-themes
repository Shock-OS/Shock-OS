#!/bin/bash

IFS=$'\n'

runuser="$(whoami)"

nl="${#runuser}"

nl=$((nl+1))

function read_settings() {

if [[ ! -f ~/.config/shock/themes ]]
then

    mkdir -p ~/.config/shock

    echo 'shock_gtk_theme=Yaru-blue
shock_icon_theme=Yaru-blue
use_libadwaita_theme=FALSE
start_icon_type=symbolic' | tee ~/.config/shock/themes

fi

source ~/.config/shock/themes  

}

function write_settings() {

mkdir -p ~/.config/shock

echo "shock_gtk_theme=${shock_gtk_theme}
shock_icon_theme=${shock_icon_theme}
use_libadwaita_theme=${use_libadwaita_theme}
start_icon_type=${start_icon_type}" | tee ~/.config/shock/themes

}

function apply_libadwaita_theme() {

read_settings

if [[ "$use_libadwaita_theme" == "TRUE" ]] && [[ "$(gsettings get org.mate.interface gtk-theme)" == "'${runuser}_"* ]] && [[ -d "$1" ]]
then

    mkdir -p ~/.config/gtk-4.0

    rm -r ~/.config/gtk-4.0/*

    files=()

    for file in "$1"/*
    do

        if [[ -h "$file" ]] #uses symlink's target location
        then

            file="$(readlink -f "$file")"

        fi

        files+=("$file")

    done

    for file in "${files[@]}"
    do

        cp -r "$file" ~/.config/gtk-4.0

    done

else

    rm -r ~/.config/gtk-4.0/*

fi

}

function replace_start_icons() {

read_settings

for a in /usr/share/shock-themes/icons/"$start_icon_type"/16x16/*
do

    for b in $(find "$1"/* -name "$(basename "$a")")
    do

        if [[ -n "$b" ]]
        then

            cp -f "/usr/share/shock-themes/icons/${start_icon_type}/$(identify -format "%wx%h" "$b")/$(basename "$a")" "$b"

        fi

    done

done

}

while true
do

    sudo shock-themes-sync

	yadlist=("/usr/share/shock/shock-logo.svg" "The default Shock OS look and feel" "Default")

    if [[ "$(gsettings get org.mate.interface gtk-theme)" == "'${runuser}_"* ]]
    then

        yadlist+=("tweaks-app" "Change settings used by some apps to help them better match your theme" "Custom theme settings")

    fi

	if (($(ls ~/.themes | wc -l)>0))
	then

		for i in ~/.themes/* #list all themes
		do

            current_theme="$(basename "$i")"

            if [[ "$(ls -d "$i"/*/)" == "${i}/metacity-1/" ]]
            then

		        yadlist+=("preferences-desktop-theme" "Metacity theme" "${current_theme:$nl}")

            elif [[ "$(basename "$(readlink -f "$i")" | awk '{print tolower($0)}')" == *"libadwaita"* ]] && [[ -f "$(find "$i"/* -name gtk*.css | head -n1)" ]]
            then

                yadlist+=("preferences-desktop-theme" "LibAdwaita theme" "${current_theme:$nl}")

            else

                yadlist+=("preferences-desktop-theme" "Theme pack" "${current_theme:$nl}")

            fi

		done

	fi

	for i in ~/.icons/* #list all icons
	do

        current_theme="$(basename "$i")"

		if  [[ -d "$(find "$i"/* -name places | head -n1)" || -d "$(find "$i"/* -name status | head -n1)" ]] && [[ "$(cat "$i/index.theme")" == *"[Icon Theme]"* ]]
		then

			yadlist+=("folder-images" "Icon pack" "${current_theme:$nl}")

		fi

	done

	for i in ~/.icons/* #list all cursors
	do

        current_theme="$(basename "$i")"

		if  [[ -d "$(find "$i"/* -name cursors | head -n1)" ]] || [[ -f "$i/cursors.theme" ]]
		then

			yadlist+=("input-mouse" "Cursor pack" "${current_theme:$nl}")

		fi

	done

	output="$(yad --window-icon=preferences-desktop-theme --title="Themes" --text="Install, remove, rename or use themes, icons and cursors." --list --column="Type":IMG --column=ToolTip:HD --column=Name --tooltip-column=2 --always-print-result --search-column=3 --response=4 --height=300 --buttons-layout=spread --button="Browse"\!applications-internet --button="Install"\!add --button="Remove"\!remove --button="Rename"\!gtk-edit --button="Use"\!dialog-ok "${yadlist[@]}"
)"

	ex=$?

	name="$(echo $output | awk 'BEGIN {FS="|" } { print $3 }')"

	type="$(echo $output | awk 'BEGIN {FS="|" } { print $2 }')"

    if ((ex==0)) #browse
    then

        xdg-open https://www.mate-look.org/browse

	elif ((ex==1)) #install
	then

		cd ~/

		file="$(yad --window-icon=preferences-desktop-theme --title="Install" --text="Please select a theme, icon or cursor pack to install. You may select a folder or a compressed archive." --file --button="Install"\!fileopen)"

		ex=$?

		if ((ex==0))
		then

            if [[ "$file" == *".deb" ]]
            then

                yad --window-icon=preferences-desktop-theme --image=emblem-important --title="Install" --text="$file is not a compatible theme file. Please choose a folder or a compressed archive containing the theme you want to install." --button="Dismiss"\!gtk-cancel

            else

                yad --fixed --window-icon=preferences-desktop-theme --title="Themes" --progress-text="Installing $(basename "$file")..." --center --progress --pulsate --auto-close --undecorated --no-buttons --skip-taskbar & killpid=$!

                tmpdir="$(mktemp -d)"

			    mkdir -p "$tmpdir"

			    cd "$tmpdir"

			    if [[ -f "$file" ]] #if archive, then extract archive
			    then

				    unp -f "$file"

			    else #if folder

				    cp -r "$file" .

			    fi

                found_dir="TRUE"

                itd="$(find "$tmpdir" -name index.theme | head -n1 | rev | cut -d '/' -f 2- | rev)"

                mtd="$(find "$tmpdir" -name metacity-1 | head -n1 | rev | cut -d '/' -f 2- | rev)"

                gtkd="$(find "$tmpdir" -name 'gtk-*' | head -n1 | rev | cut -d '/' -f 2- | rev)"

                sid="$(find "$tmpdir" -name settings.ini | head -n1 | rev | cut -d '/' -f 2- | rev)"

                if [[ -d "$itd" ]]
                then

                    cd "$itd"

                    cd ..

                    for i in $(find . -name index.theme)
                    do

                        inherit_line="$(grep -m 1 -e '^Inherits=' "$i")"

                        inherit_line="${inherit_line:9}"

                        IFS=','

                        read -a inherits <<< "$inherit_line"

                        IFS=$'\n'

                        inherit_line="Inherits="

                        for theme in "${inherits[@]}"
                        do

                            if [[ "$theme" != "Adwaita" ]] && [[ "$theme" != "hicolor" ]]
                            then

                                inherit_line+="${runuser}_${theme},"

                            fi

                        done

                        if ((${#inherit_line}==9)) #if no fallback themes
                        then

                            inherit_line="Inherits=${runuser}_shock_fallback_icon_theme,Yaru,Adwaita,hicolor"

                        else

                            inherit_line+=",${runuser}_shock_fallback_icon_theme,Yaru,Adwaita,hicolor"

                        fi

                        sed -i "s|^Inherits=.*|${inherit_line}|" "$i"

                    done

                    #the above for loop sets the Shock OS theme as a fallback theme

                elif [[ -d "$mtd" ]]
                then

                    cd "$mtd"

                    cd ..

                elif [[ -d "$gtkd" ]]
                then

                    cd "$gtkd"

                    cd ..

                elif [[ -d "$sid" ]]
                then

                    cd "$sid"

                    cd ..

                else

                    found_dir="FALSE"

                fi

                worked="FALSE"

                if [[ "$found_dir" == "TRUE" ]]
                then

                    replace_start_icons .

			        for i in *
			        do

				        if [[ -d "$(find "$i" -name cursors | head -n1)" || -f "$i/cursors.theme" || "$(cat "$i/index.theme")" == *"[Icon Theme]"* ]] && [[ -f "$i/index.theme" ]]
			            then

                            worked="TRUE"

                            mkdir -p ~/.icons

                            mkdir -p ~/.shock/icons

                            if [[ -d ~/.shock/icons/"$i" ]] #if directory with the same name already exists
                            then

                                dn=1

                                until [[ ! -d ~/.shock/icons/"$i ($dn)" ]]
                                do

                                    dn=$((dn+1))

                                done

                                mkdir -p ~/.shock/icons/"$i ($dn)"

                                cp -rf "$i"/* ~/.shock/icons/"$i ($dn)"

                            else

				                cp -rf "$i" ~/.shock/icons/"$i"

                            fi

			            fi

                        if [[ "$(cat "$i/index.theme")" == *"X-GNOME-Metatheme"* ]] || [[ -d "$(find "$i" -name metacity-1 | head -n1)" ]] || [[ -d "$(find "$i" -name 'gtk-*' | head -n1)" ]] || [[ -f "$i/settings.ini" ]] || [[ "$(basename "$i" | awk '{print tolower($0)}')" == *"libadwaita"* && -f "$(find "$i" -name gtk*.css | head -n1)" ]]
                        then

                            worked="TRUE"

                            mkdir -p ~/.themes

                            mkdir -p ~/.shock/themes

                            if [[ -d ~/.shock/themes/"$i" ]] #if directory with the same name already exists
                            then

                                dn=1

                                until [[ ! -d ~/.shock/themes/"$i ($dn)" ]]
                                do

                                    dn=$((dn+1))

                                done

                                mkdir -p ~/.shock/themes/"$i ($dn)"

                                cp -rf "$i"/* ~/.shock/themes/"$i ($dn)"

                            else

                                cp -rf "$i" ~/.shock/themes/"$i"

                            fi

                        fi

			        done

                    cd ~/

			        rm -rf "$tmpdir" 

                fi

                kill -9 $killpid

                if [[ "$worked" == "FALSE" ]]
                then

                    yad --window-icon=preferences-desktop-theme --image=emblem-important --title="Install" --text="$file does not appear to contain any themes, icon packs or cursor packs." --button="Dismiss"\!gtk-cancel

                fi

            fi

		fi

	elif ((ex==2)) #remove
	then

		if [[ "$type" == "The default Shock OS look and feel" ]]
        then

			yad --window-icon=preferences-desktop-theme --title="Themes" --image=emblem-important --text="You cannot remove the default theme." --button="Dismiss"\!gtk-cancel

		elif [[ "$type" == "Theme pack" ]] || [[ "$type" == "Metacity theme" ]] #if theme pack
		then

            if [[ "$(gsettings get org.mate.interface gtk-theme)" == "'${runuser}_${name}'" ]] || [[ "$(gsettings get org.mate.Marco.general theme)" == "'${runuser}_${name}'" ]]
            then

                yad --window-icon=preferences-desktop-theme --title="Themes" --image=emblem-important --text="You cannot remove ${name} because it is currently in use. Please switch to a different theme before removing ${name}." --button="Dismiss"\!gtk-cancel

            else

                yad --window-icon=preferences-desktop-theme --title="Themes" --image=gtk-delete --text="Are you sure you want to delete ${name}?" --button="Cancel"\!gtk-cancel:1 --button="Delete"\!gtk-delete:0

                ex=$?

                if [[ "$ex" == "0" ]]
                then

                    ttr="$(readlink ~/.themes/"${runuser}_${name}")"

			        rm -r "$ttr"

                fi

            fi

		else #if icon or cursor pack

            if [[ "$(gsettings get org.mate.interface icon-theme)" == "'${runuser}_${name}'" ]] || [[ "$(gsettings get org.mate.peripherals-mouse cursor-theme)" == "'${runuser}_${name}'" ]]
            then

                if [[ "$type" == "Icon pack" ]]
                then

                    yad --window-icon=preferences-desktop-theme --title="Themes" --image=emblem-important --text="You cannot remove ${name} because it is currently in use. Please switch to a different icon theme before removing ${name}." --button="Dismiss"\!gtk-cancel

                else

                    yad --window-icon=preferences-desktop-theme --title="Themes" --image=emblem-important --text="You cannot remove ${name} because it is currently in use. Please switch to a different cursor theme before removing ${name}." --button="Dismiss"\!gtk-cancel

                fi

            else

                yad --window-icon=preferences-desktop-theme --title="Themes" --image=gtk-delete --text="Are you sure you want to delete ${name}?" --button="Cancel"\!gtk-cancel:1 --button="Delete"\!gtk-delete:0

                ex=$?

                if [[ "$ex" == "0" ]]
                then

                    ttr="$(readlink ~/.icons/"${runuser}_$name")"

			        rm -r "$ttr"

                fi

            fi

		fi

	elif ((ex==3)) #rename
	then

        if [[ "$type" == "The default Shock OS look and feel" ]]
		then

            yad --window-icon=preferences-desktop-theme --title="Rename" --image=emblem-important --text="You cannot rename the default theme." --button="Dismiss"\!gtk-cancel

        else

		    success="no"

		    until [[ "$success" == "yes" ]]
		    do
			    newname="$(yad --window-icon=preferences-desktop-theme --title="Rename" --text="Please enter the new name for your theme pack." --entry --entry-text="$name" --button="Rename"\!gtk-edit)"

			    ex=$?

			    if ((ex==0))
			    then

				    success="yes"

				    if [[ "$type" == "Theme pack" ]] || [[ "$type" == "Metacity theme" ]] #if theme pack
				    then

					    if [[ -e ~/.themes/"$newname" ]] #if theme with that name already exists
					    then

						    yad --window-icon=preferences-desktop-theme --image=emblem-important --title="Rename" --text="There is already a theme pack named '$newname'. Please choose a different name." --button="Retry"\!edit-undo

						    success="no"

					    else

						    mv ~/.themes/"${runuser}_$name" ~/.themes/"${runuser}_$newname"

						    if [[ "$(gsettings get org.mate.interface gtk-theme)" == "'${runuser}_${name}'" || "$(gsettings get org.mate.Marco.general theme)" == "'${runuser}_${name}'" ]] && [[ "$type" == "Theme pack" ]] #if regular theme
						    then

							    gsettings set org.mate.interface gtk-theme "${runuser}_${newname}"

							    gsettings set org.mate.Marco.general theme "${runuser}_${newname}"

                                flatpak override --user --env=GTK_THEME="${runuser}_${newname}"

						    elif [[ "$(gsettings get org.mate.Marco.general theme)" == "'${runuser}_${name}'" ]] && [[ "$type" == "Metacity theme" ]] #if metacity theme
                            then

                                gsettings set org.mate.Marco.general theme "${runuser}_${newname}"

                            fi

					    fi

				    else #if icon or cursor pack

					    if [[ -e ~/.icons/"$newname" ]] #if icon or cursor pack with that name already exists
					    then

						    yad --window-icon=preferences-desktop-theme --image=emblem-important --title="Rename" --text="There is already an icon/cursor pack named '$newname'. Please choose a different name." --button="Retry"\!edit-undo

						    success="no"

					    else

						    mv ~/.icons/"${runuser}_$name" ~/.icons/"${runuser}_$newname"

						    if [[ "$(gsettings get org.mate.interface icon-theme)" == "'${runuser}_${name}'" ]]
						    then

							    gsettings set org.mate.interface icon-theme "${runuser}_${newname}"

                                flatpak override --user --env=ICON_THEME="${runuser}_${newname}"

						    fi

						    if [[ "$(gsettings get org.mate.peripherals-mouse cursor-theme)" == "'${runuser}_${name}'" ]]
						    then

							    gsettings set org.mate.peripherals-mouse cursor-theme "${runuser}_${newname}"

                                gsettings set org.gnome.desktop.interface cursor-theme "${runuser}_${newname}" #MUTTER COMPATIBILITY

						    fi

					    fi

				    fi

			    else

                    break

                fi

		    done

        fi

	elif ((ex==4)) #use
	then

		if [[ "$type" == "The default Shock OS look and feel" ]]
		then

            read_settings

			if [[ "$shock_gtk_theme" == *"-dark" ]]
			then

                theme_selection='Light!^Dark'

            else

				theme_selection='^Light!Dark'

			fi

            if [[ "$shock_gtk_theme" != "$shock_icon_theme" ]] #if mixed color scheme
            then

                color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!Sage!^Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-blue"* ]]
            then

                color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!Sage!Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-prussiangreen"* ]]
            then

                color_selection='Blue!^Green!Magenta!Olive!Orange!Purple!Red!Sage!Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-magenta"* ]]
            then

                color_selection='Blue!Green!^Magenta!Olive!Orange!Purple!Red!Sage!Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-olive"* ]]
            then

                color_selection='Blue!Green!Magenta!^Olive!Orange!Purple!Red!Sage!Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-purple"* ]]
            then

                color_selection='Blue!Green!Magenta!Olive!Orange!^Purple!Red!Sage!Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-red"* ]]
            then

                color_selection='Blue!Green!Magenta!Olive!Orange!Purple!^Red!Sage!Mixed'

            elif [[ "$shock_gtk_theme" == "Yaru-sage"* ]]
            then

                color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!^Sage!Mixed'

            else #if orange

                color_selection='Blue!Green!Magenta!Olive!^Orange!Purple!Red!Sage!Mixed'

            fi

			output="$(yad --width=300 --window-icon=preferences-desktop-theme --title="Themes" --form --field="Theme:":CB "$theme_selection" --field="Color:":CB "$color_selection" --button="Apply"\!gtk-ok)"

			ex=$?

			if ((ex==0))
			then

				lod="$(echo "$output" | awk -F'|' '{print $1}')"

				lod="$(echo "$lod" | awk '{print tolower($0)}')" #this command makes all the letters lowercase

                if [[ "$lod" == "dark" ]]
                then

                    lod="-dark"

                else

                    lod=""

                fi

				color="$(echo "$output" | awk -F'|' '{print $2}')"

				color="$(echo "$color" | awk '{print tolower($0)}')" #this command makes all the letters lowercase

                if [[ "$color" == "green" ]]
                then

                    color="-prussiangreen"                

                elif [[ "$color" == "orange" ]]
                then

                    color=""

                else

                    color="-${color}"

                fi

                if [[ "$color" == "-mixed" ]]
                then

                    source ~/.config/shock-themes-mixed-colors

                    if [[ "$theme_color" == "green" ]]
                    then

                        theme_color_selection='Blue!^Green!Magenta!Olive!Orange!Purple!Red!Sage'

                    elif [[ "$theme_color" == "magenta" ]]
                    then

                        theme_color_selection='Blue!Green!^Magenta!Olive!Orange!Purple!Red!Sage'

                    elif [[ "$theme_color" == "olive" ]]
                    then

                        theme_color_selection='Blue!Green!Magenta!^Olive!Orange!Purple!Red!Sage'

                    elif [[ "$theme_color" == "orange" ]]
                    then

                        theme_color_selection='Blue!Green!Magenta!Olive!^Orange!Purple!Red!Sage'

                    elif [[ "$theme_color" == "purple" ]]
                    then

                        theme_color_selection='Blue!Green!Magenta!Olive!Orange!^Purple!Red!Sage'

                    elif [[ "$theme_color" == "red" ]]
                    then

                        theme_color_selection='Blue!Green!Magenta!Olive!Orange!Purple!^Red!Sage'

                    elif [[ "$theme_color" == "sage" ]]
                    then

                        theme_color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!^Sage'

                    else #if theme is blue or mixed colors have not been used before

                        theme_color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!Sage'

                    fi

                    if [[ "$icon_color" == "green" ]]
                    then

                        icon_color_selection='Blue!^Green!Magenta!Olive!Orange!Purple!Red!Sage'

                    elif [[ "$icon_color" == "magenta" ]]
                    then

                        icon_color_selection='Blue!Green!^Magenta!Olive!Orange!Purple!Red!Sage'

                    elif [[ "$icon_color" == "olive" ]]
                    then

                        icon_color_selection='Blue!Green!Magenta!^Olive!Orange!Purple!Red!Sage'

                    elif [[ "$icon_color" == "orange" ]]
                    then

                        icon_color_selection='Blue!Green!Magenta!Olive!^Orange!Purple!Red!Sage'

                    elif [[ "$icon_color" == "purple" ]]
                    then

                        icon_color_selection='Blue!Green!Magenta!Olive!Orange!^Purple!Red!Sage'

                    elif [[ "$icon_color" == "red" ]]
                    then

                        icon_color_selection='Blue!Green!Magenta!Olive!Orange!Purple!^Red!Sage'

                    elif [[ "$icon_color" == "sage" ]]
                    then

                        icon_color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!^Sage'

                    else #if theme is blue or mixed colors have not been used before

                        icon_color_selection='Blue!Green!Magenta!Olive!Orange!Purple!Red!Sage'

                    fi

                    output="$(yad --width=300 --window-icon=preferences-desktop-theme --title="Themes" --form --field="Theme Color:":CB "$theme_color_selection" --field="Icon Color:":CB "$icon_color_selection" --button="Apply"\!gtk-ok)"

                    ex=$?

                    if ((ex==0))
                    then

                        theme_color="$(echo "$output" | awk -F'|' '{print $1}')"

			            theme_color="$(echo "$theme_color" | awk '{print tolower($0)}')" #this command makes all the letters lowercase

                        color="$theme_color" #for LightDM Greeter settings file.

			            icon_color="$(echo "$output" | awk -F'|' '{print $2}')"

			            icon_color="$(echo "$icon_color" | awk '{print tolower($0)}')" #this command makes all the letters lowercase

                        echo "theme_color=${theme_color}
icon_color=${icon_color}" | tee ~/.config/shock-themes-mixed-colors

                        if [[ "$theme_color" == "green" ]]
                        then

                            theme_color="-prussiangreen"

                        elif [[ "$theme_color" == "orange" ]]
                        then

                            theme_color=""

                        else

                            theme_color="-${theme_color}"

                        fi

                        if [[ "$icon_color" == "green" ]]
                        then

                            icon_color="-prussiangreen"

                        elif [[ "$icon_color" == "orange" ]]
                        then

                            icon_color=""

                        else

                            icon_color="-${icon_color}"

                        fi

                        shock_gtk_theme="Yaru${theme_color}${lod}"

                        shock_icon_theme="Yaru${icon_color}${lod}"

                    fi

                else

                    shock_gtk_theme="Yaru${color}${lod}"

                    shock_icon_theme="Yaru${color}${lod}"

                fi

                if ((ex==0))
                then

				    gsettings set org.mate.interface gtk-theme "$shock_gtk_theme"

				    gsettings set org.mate.Marco.general theme "Yaru${lod}"

				    gsettings set org.mate.interface icon-theme "$shock_icon_theme"

				    gsettings set org.mate.peripherals-mouse cursor-theme "Yaru-dark"

                    gsettings set org.gnome.desktop.interface cursor-theme "Yaru-dark" #MUTTER COMPATIBILITY

                    flatpak override --user --env=GTK_THEME="$shock_gtk_theme"

                    if [[ "$lod" == "-dark" ]]
                    then

                        gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"

                    else

                        gsettings set org.gnome.desktop.interface color-scheme "prefer-light"

                    fi

				    echo "[Greeter]
theme-name=Yaru${color}-dark
icon-theme-name=Yaru${color}-dark
show-hostname=false
show-power=false
show-keyboard=false
show-clock=false" | tee /etc/lightdm/slick-greeter.conf

			        write_settings

                    apply_libadwaita_theme /usr/share/themes/"$shock_gtk_theme"/gtk-4.0

                fi

			fi

        elif [[ "$type" == "Change settings used by some apps to help them better match your theme" ]] #Custom theme settings
        then

            color_scheme="$(gsettings get org.gnome.desktop.interface color-scheme)"

            if [[ "$color_scheme" == "'prefer-dark'" ]]
            then

                color_scheme_selection='Default!^Dark!Light'

            elif [[ "$color_scheme" == "'prefer-light'" ]]
            then

                color_scheme_selection='Default!Dark!^Light'

            else

                color_scheme_selection='Default!Dark!Light'

            fi

            read_settings

            old_start_icon_type="$start_icon_type"

            if [[ "$start_icon_type" == "symbolic" ]]
            then

                start_icon_type_selection='Standard!^Symbolic'

            else

                start_icon_type_selection='Standard!Symbolic'

            fi

            output="$(yad --width=300 --window-icon=preferences-desktop-theme --title="Custom Theme Settings" --form --field="<b>Color Scheme</b>":LBL '' --field="This setting is used by some apps to determine whether to use light or dark mode to better match your theme. This settings is usually set automatically, but you may want to change it manually if some apps don't match the light/dark theme.":LBL '' --field='':CB "$color_scheme_selection" --field='':LBL '' --field="<b>Use LibAdwaita Theme</b>":LBL '' --field="This setting only applies to themes that provide support for LibAdwaita apps. If this option is disabled, or if the current theme doesn't support LibAdwaita, then LibAdwaita apps will use the default LibAdwaita theme.":LBL '' --field="Use LibAdwaita Theme":CHK "$use_libadwaita_theme" --field='':LBL '' --field="<b>Start Icon Type</b>":LBL '' --field="Choose whether the start menu icon should be a standard icon or a symbolic icon to better match your theme. Beacuse of the symbolic nature of newer themes, the standard icon may look broken on some themes, but older themes may look better with the standard icon.":LBL '' --field='':CB "$start_icon_type_selection" --button="Apply"\!gtk-ok)"

            ex=$?

            if [[ "$ex" == "0" ]]
            then

                color_scheme="$(echo "$output" | awk -F'|' '{print $3}')"

                if [[ "$color_scheme" == "Dark" ]]
                then

                    gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"

                elif [[ "$color_scheme" == "Light" ]]
                then

                    gsettings set org.gnome.desktop.interface color-scheme "prefer-light"

                else

                    gsettings reset org.gnome.desktop.interface color-scheme

                fi

                read_settings

                use_libadwaita_theme="$(echo "$output" | awk -F'|' '{print $7}')"

                start_icon_type="$(echo "$output" | awk -F'|' '{print $11}' | awk '{print tolower($0)}')"

                write_settings

                apply_libadwaita_theme /home/"$runuser"/.themes/"$(gsettings get org.mate.interface gtk-theme | sed "s/'//g")"/gtk-4.0

                if [[ "$start_icon_type" != "$old_start_icon_type" ]]
                then

                    replace_start_icons ~/.icons/"$(gsettings get org.mate.interface icon-theme | sed "s/'//g")"

                fi

            fi

		elif [[ "$type" == "Theme pack" ]]
		then

			gsettings set org.mate.interface gtk-theme "${runuser}_${name}"

            if [[ -d /home/"$runuser"/.themes/"${runuser}_${name}"/gtk-4.0 ]] #GTK4 Libadwaita themes patch
            then

                apply_libadwaita_theme /home/"$runuser"/.themes/"${runuser}_${name}"/gtk-4.0

            fi

            if [[ "$(gsettings get org.mate.session.required-components windowmanager)" != "'mutter'" ]]
            then

                if [[ -d /home/"$runuser"/.themes/"${runuser}_${name}"/metacity-1 ]]
                then

			        gsettings set org.mate.Marco.general theme "${runuser}_${name}"

                else

                    yad --width=400 --window-icon=preferences-desktop-theme --image=emblem-important --title="Themes" --text="This theme does not contain a metacity theme (window manager theme), so the window manager will continue to use the previous theme. You can use a different metacity theme with this theme if you like." --button="Dismiss"\!gtk-cancel

                fi

            fi

            flatpak override --user --env=GTK_THEME="${runuser}_${name}"

            if [[ "$(echo "$name" | awk '{print tolower($0)}')" == *"dark"* ]] || [[ "$(cat ~/.themes/"'${runuser}_${name}'"/index.theme | awk '{print tolower($0)}')" == *"dark"* ]]
            then

                gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"

            elif [[ "$(echo "$name" | awk '{print tolower($0)}')" == *"light"* ]] || [[ "$(cat ~/.themes/"'${runuser}_${name}'"/index.theme | awk '{print tolower($0)}')" == *"light"* ]]
            then

                gsettings set org.gnome.desktop.interface color-scheme "prefer-light"

            else

                gsettings reset org.gnome.desktop.interface color-scheme

            fi

        elif [[ "$type" == "LibAdwaita theme" ]]
        then

            apply_libadwaita_theme /home/"$runuser"/.themes/"${runuser}_${name}"

        elif [[ "$type" == "Metacity theme" ]]
        then

            if [[ "$(gsettings get org.mate.session.required-components windowmanager)" == "'mutter'" ]] #MUTTER COMPATIBILITY
            then

                yad --width=400 --window-icon=preferences-desktop-theme --image=emblem-important --title="Themes" --text="Mutter, the current window manager, does not support metacity themes. To use metacity themes, please select a different window manager in the 'Windows' app." --button="Dismiss"\!gtk-cancel

            else

                gsettings set org.mate.Marco.general theme "${runuser}_${name}"

            fi

		elif [[ "$type" == "Icon pack" ]]
		then

            replace_start_icons ~/.icons/"${runuser}_${name}"

			gsettings set org.mate.interface icon-theme "${runuser}_${name}"

            flatpak override --user --env=ICON_THEME="${runuser}_${name}"

		elif [[ "$type" == "Cursor pack" ]]
		then

			gsettings set org.mate.peripherals-mouse cursor-theme "${runuser}_${name}"

            gsettings set org.gnome.desktop.interface cursor-theme "${runuser}_${name}" #MUTTER COMPATIBILITY

		fi

	else

		exit

	fi

done

